{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-c7fd2c8fe8e18644.js","node_modules/recordrtc/RecordRTC.js","node_modules/process/browser.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"999b6212b753ec82\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */, assetsToDispose /*: Array<[ParcelRequire, string]> */, assetsToAccept /*: Array<[ParcelRequire, string]> */;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !['localhost', '127.0.0.1', '0.0.0.0'].includes(hostname) ? 'wss' : 'ws';\n  var ws;\n  try {\n    ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n  } catch (err) {\n    if (err.message) {\n      console.error(err.message);\n    }\n    ws = {};\n  }\n\n  // Web extension context\n  var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n\n  // $FlowFixMe\n  ws.onmessage = async function (event /*: {data: string, ...} */) {\n    checkedAssets = {} /*: {|[string]: boolean|} */;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n      if (handled) {\n        console.clear();\n\n        // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n        await hmrApplyUpdates(assets);\n\n        // Dispose all old assets.\n        let processedAssets = {} /*: {|[string]: boolean|} */;\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n\n        // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n        processedAssets = {};\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html);\n        // $FlowFixMe\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n  ws.onerror = function (e) {\n    if (e.message) {\n      console.error(e.message);\n    }\n  };\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension fix\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n            extCtx.runtime.reload();\n            return;\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return true;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        });\n\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}","'use strict';\r\n\r\n// Last time updated: 2021-03-09 3:20:22 AM UTC\r\n\r\n// ________________\r\n// RecordRTC v5.6.2\r\n\r\n// Open-Sourced: https://github.com/muaz-khan/RecordRTC\r\n\r\n// --------------------------------------------------\r\n// Muaz Khan     - www.MuazKhan.com\r\n// MIT License   - www.WebRTC-Experiment.com/licence\r\n// --------------------------------------------------\r\n\r\n// ____________\r\n// RecordRTC.js\r\n\r\n/**\r\n * {@link https://github.com/muaz-khan/RecordRTC|RecordRTC} is a WebRTC JavaScript library for audio/video as well as screen activity recording. It supports Chrome, Firefox, Opera, Android, and Microsoft Edge. Platforms: Linux, Mac and Windows. \r\n * @summary Record audio, video or screen inside the browser.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef RecordRTC\r\n * @class\r\n * @example\r\n * var recorder = RecordRTC(mediaStream or [arrayOfMediaStream], {\r\n *     type: 'video', // audio or video or gif or canvas\r\n *     recorderType: MediaStreamRecorder || CanvasRecorder || StereoAudioRecorder || Etc\r\n * });\r\n * recorder.startRecording();\r\n * @see For further information:\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - Single media-stream object, array of media-streams, html-canvas-element, etc.\r\n * @param {object} config - {type:\"video\", recorderType: MediaStreamRecorder, disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, desiredSampRate: 16000, video: HTMLVideoElement, etc.}\r\n */\r\n\r\nfunction RecordRTC(mediaStream, config) {\r\n    if (!mediaStream) {\r\n        throw 'First parameter is required.';\r\n    }\r\n\r\n    config = config || {\r\n        type: 'video'\r\n    };\r\n\r\n    config = new RecordRTCConfiguration(mediaStream, config);\r\n\r\n    // a reference to user's recordRTC object\r\n    var self = this;\r\n\r\n    function startRecording(config2) {\r\n        if (!config.disableLogs) {\r\n            console.log('RecordRTC version: ', self.version);\r\n        }\r\n\r\n        if (!!config2) {\r\n            // allow users to set options using startRecording method\r\n            // config2 is similar to main \"config\" object (second parameter over RecordRTC constructor)\r\n            config = new RecordRTCConfiguration(mediaStream, config2);\r\n        }\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('started recording ' + config.type + ' stream.');\r\n        }\r\n\r\n        if (mediaRecorder) {\r\n            mediaRecorder.clearRecordedData();\r\n            mediaRecorder.record();\r\n\r\n            setState('recording');\r\n\r\n            if (self.recordingDuration) {\r\n                handleRecordingDuration();\r\n            }\r\n            return self;\r\n        }\r\n\r\n        initRecorder(function() {\r\n            if (self.recordingDuration) {\r\n                handleRecordingDuration();\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    function initRecorder(initCallback) {\r\n        if (initCallback) {\r\n            config.initCallback = function() {\r\n                initCallback();\r\n                initCallback = config.initCallback = null; // recorder.initRecorder should be call-backed once.\r\n            };\r\n        }\r\n\r\n        var Recorder = new GetRecorderType(mediaStream, config);\r\n\r\n        mediaRecorder = new Recorder(mediaStream, config);\r\n        mediaRecorder.record();\r\n\r\n        setState('recording');\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Initialized recorderType:', mediaRecorder.constructor.name, 'for output-type:', config.type);\r\n        }\r\n    }\r\n\r\n    function stopRecording(callback) {\r\n        callback = callback || function() {};\r\n\r\n        if (!mediaRecorder) {\r\n            warningLog();\r\n            return;\r\n        }\r\n\r\n        if (self.state === 'paused') {\r\n            self.resumeRecording();\r\n\r\n            setTimeout(function() {\r\n                stopRecording(callback);\r\n            }, 1);\r\n            return;\r\n        }\r\n\r\n        if (self.state !== 'recording' && !config.disableLogs) {\r\n            console.warn('Recording state should be: \"recording\", however current state is: ', self.state);\r\n        }\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Stopped recording ' + config.type + ' stream.');\r\n        }\r\n\r\n        if (config.type !== 'gif') {\r\n            mediaRecorder.stop(_callback);\r\n        } else {\r\n            mediaRecorder.stop();\r\n            _callback();\r\n        }\r\n\r\n        setState('stopped');\r\n\r\n        function _callback(__blob) {\r\n            if (!mediaRecorder) {\r\n                if (typeof callback.call === 'function') {\r\n                    callback.call(self, '');\r\n                } else {\r\n                    callback('');\r\n                }\r\n                return;\r\n            }\r\n\r\n            Object.keys(mediaRecorder).forEach(function(key) {\r\n                if (typeof mediaRecorder[key] === 'function') {\r\n                    return;\r\n                }\r\n\r\n                self[key] = mediaRecorder[key];\r\n            });\r\n\r\n            var blob = mediaRecorder.blob;\r\n\r\n            if (!blob) {\r\n                if (__blob) {\r\n                    mediaRecorder.blob = blob = __blob;\r\n                } else {\r\n                    throw 'Recording failed.';\r\n                }\r\n            }\r\n\r\n            if (blob && !config.disableLogs) {\r\n                console.log(blob.type, '->', bytesToSize(blob.size));\r\n            }\r\n\r\n            if (callback) {\r\n                var url;\r\n\r\n                try {\r\n                    url = URL.createObjectURL(blob);\r\n                } catch (e) {}\r\n\r\n                if (typeof callback.call === 'function') {\r\n                    callback.call(self, url);\r\n                } else {\r\n                    callback(url);\r\n                }\r\n            }\r\n\r\n            if (!config.autoWriteToDisk) {\r\n                return;\r\n            }\r\n\r\n            getDataURL(function(dataURL) {\r\n                var parameter = {};\r\n                parameter[config.type + 'Blob'] = dataURL;\r\n                DiskStorage.Store(parameter);\r\n            });\r\n        }\r\n    }\r\n\r\n    function pauseRecording() {\r\n        if (!mediaRecorder) {\r\n            warningLog();\r\n            return;\r\n        }\r\n\r\n        if (self.state !== 'recording') {\r\n            if (!config.disableLogs) {\r\n                console.warn('Unable to pause the recording. Recording state: ', self.state);\r\n            }\r\n            return;\r\n        }\r\n\r\n        setState('paused');\r\n\r\n        mediaRecorder.pause();\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Paused recording.');\r\n        }\r\n    }\r\n\r\n    function resumeRecording() {\r\n        if (!mediaRecorder) {\r\n            warningLog();\r\n            return;\r\n        }\r\n\r\n        if (self.state !== 'paused') {\r\n            if (!config.disableLogs) {\r\n                console.warn('Unable to resume the recording. Recording state: ', self.state);\r\n            }\r\n            return;\r\n        }\r\n\r\n        setState('recording');\r\n\r\n        // not all libs have this method yet\r\n        mediaRecorder.resume();\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Resumed recording.');\r\n        }\r\n    }\r\n\r\n    function readFile(_blob) {\r\n        postMessage(new FileReaderSync().readAsDataURL(_blob));\r\n    }\r\n\r\n    function getDataURL(callback, _mediaRecorder) {\r\n        if (!callback) {\r\n            throw 'Pass a callback function over getDataURL.';\r\n        }\r\n\r\n        var blob = _mediaRecorder ? _mediaRecorder.blob : (mediaRecorder || {}).blob;\r\n\r\n        if (!blob) {\r\n            if (!config.disableLogs) {\r\n                console.warn('Blob encoder did not finish its job yet.');\r\n            }\r\n\r\n            setTimeout(function() {\r\n                getDataURL(callback, _mediaRecorder);\r\n            }, 1000);\r\n            return;\r\n        }\r\n\r\n        if (typeof Worker !== 'undefined' && !navigator.mozGetUserMedia) {\r\n            var webWorker = processInWebWorker(readFile);\r\n\r\n            webWorker.onmessage = function(event) {\r\n                callback(event.data);\r\n            };\r\n\r\n            webWorker.postMessage(blob);\r\n        } else {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(blob);\r\n            reader.onload = function(event) {\r\n                callback(event.target.result);\r\n            };\r\n        }\r\n\r\n        function processInWebWorker(_function) {\r\n            try {\r\n                var blob = URL.createObjectURL(new Blob([_function.toString(),\r\n                    'this.onmessage =  function (eee) {' + _function.name + '(eee.data);}'\r\n                ], {\r\n                    type: 'application/javascript'\r\n                }));\r\n\r\n                var worker = new Worker(blob);\r\n                URL.revokeObjectURL(blob);\r\n                return worker;\r\n            } catch (e) {}\r\n        }\r\n    }\r\n\r\n    function handleRecordingDuration(counter) {\r\n        counter = counter || 0;\r\n\r\n        if (self.state === 'paused') {\r\n            setTimeout(function() {\r\n                handleRecordingDuration(counter);\r\n            }, 1000);\r\n            return;\r\n        }\r\n\r\n        if (self.state === 'stopped') {\r\n            return;\r\n        }\r\n\r\n        if (counter >= self.recordingDuration) {\r\n            stopRecording(self.onRecordingStopped);\r\n            return;\r\n        }\r\n\r\n        counter += 1000; // 1-second\r\n\r\n        setTimeout(function() {\r\n            handleRecordingDuration(counter);\r\n        }, 1000);\r\n    }\r\n\r\n    function setState(state) {\r\n        if (!self) {\r\n            return;\r\n        }\r\n\r\n        self.state = state;\r\n\r\n        if (typeof self.onStateChanged.call === 'function') {\r\n            self.onStateChanged.call(self, state);\r\n        } else {\r\n            self.onStateChanged(state);\r\n        }\r\n    }\r\n\r\n    var WARNING = 'It seems that recorder is destroyed or \"startRecording\" is not invoked for ' + config.type + ' recorder.';\r\n\r\n    function warningLog() {\r\n        if (config.disableLogs === true) {\r\n            return;\r\n        }\r\n\r\n        console.warn(WARNING);\r\n    }\r\n\r\n    var mediaRecorder;\r\n\r\n    var returnObject = {\r\n        /**\r\n         * This method starts the recording.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * var recorder = RecordRTC(mediaStream, {\r\n         *     type: 'video'\r\n         * });\r\n         * recorder.startRecording();\r\n         */\r\n        startRecording: startRecording,\r\n\r\n        /**\r\n         * This method stops the recording. It is strongly recommended to get \"blob\" or \"URI\" inside the callback to make sure all recorders finished their job.\r\n         * @param {function} callback - Callback to get the recorded blob.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     // use either \"this\" or \"recorder\" object; both are identical\r\n         *     video.src = this.toURL();\r\n         *     var blob = this.getBlob();\r\n         * });\r\n         */\r\n        stopRecording: stopRecording,\r\n\r\n        /**\r\n         * This method pauses the recording. You can resume recording using \"resumeRecording\" method.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @todo Firefox is unable to pause the recording. Fix it.\r\n         * @example\r\n         * recorder.pauseRecording();  // pause the recording\r\n         * recorder.resumeRecording(); // resume again\r\n         */\r\n        pauseRecording: pauseRecording,\r\n\r\n        /**\r\n         * This method resumes the recording.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.pauseRecording();  // first of all, pause the recording\r\n         * recorder.resumeRecording(); // now resume it\r\n         */\r\n        resumeRecording: resumeRecording,\r\n\r\n        /**\r\n         * This method initializes the recording.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @todo This method should be deprecated.\r\n         * @example\r\n         * recorder.initRecorder();\r\n         */\r\n        initRecorder: initRecorder,\r\n\r\n        /**\r\n         * Ask RecordRTC to auto-stop the recording after 5 minutes.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * var fiveMinutes = 5 * 1000 * 60;\r\n         * recorder.setRecordingDuration(fiveMinutes, function() {\r\n         *    var blob = this.getBlob();\r\n         *    video.src = this.toURL();\r\n         * });\r\n         * \r\n         * // or otherwise\r\n         * recorder.setRecordingDuration(fiveMinutes).onRecordingStopped(function() {\r\n         *    var blob = this.getBlob();\r\n         *    video.src = this.toURL();\r\n         * });\r\n         */\r\n        setRecordingDuration: function(recordingDuration, callback) {\r\n            if (typeof recordingDuration === 'undefined') {\r\n                throw 'recordingDuration is required.';\r\n            }\r\n\r\n            if (typeof recordingDuration !== 'number') {\r\n                throw 'recordingDuration must be a number.';\r\n            }\r\n\r\n            self.recordingDuration = recordingDuration;\r\n            self.onRecordingStopped = callback || function() {};\r\n\r\n            return {\r\n                onRecordingStopped: function(callback) {\r\n                    self.onRecordingStopped = callback;\r\n                }\r\n            };\r\n        },\r\n\r\n        /**\r\n         * This method can be used to clear/reset all the recorded data.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @todo Figure out the difference between \"reset\" and \"clearRecordedData\" methods.\r\n         * @example\r\n         * recorder.clearRecordedData();\r\n         */\r\n        clearRecordedData: function() {\r\n            if (!mediaRecorder) {\r\n                warningLog();\r\n                return;\r\n            }\r\n\r\n            mediaRecorder.clearRecordedData();\r\n\r\n            if (!config.disableLogs) {\r\n                console.log('Cleared old recorded data.');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get the recorded blob. Use this method inside the \"stopRecording\" callback.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     var blob = this.getBlob();\r\n         *\r\n         *     var file = new File([blob], 'filename.webm', {\r\n         *         type: 'video/webm'\r\n         *     });\r\n         *\r\n         *     var formData = new FormData();\r\n         *     formData.append('file', file); // upload \"File\" object rather than a \"Blob\"\r\n         *     uploadToServer(formData);\r\n         * });\r\n         * @returns {Blob} Returns recorded data as \"Blob\" object.\r\n         */\r\n        getBlob: function() {\r\n            if (!mediaRecorder) {\r\n                warningLog();\r\n                return;\r\n            }\r\n\r\n            return mediaRecorder.blob;\r\n        },\r\n\r\n        /**\r\n         * Get data-URI instead of Blob.\r\n         * @param {function} callback - Callback to get the Data-URI.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     recorder.getDataURL(function(dataURI) {\r\n         *         video.src = dataURI;\r\n         *     });\r\n         * });\r\n         */\r\n        getDataURL: getDataURL,\r\n\r\n        /**\r\n         * Get virtual/temporary URL. Usage of this URL is limited to current tab.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     video.src = this.toURL();\r\n         * });\r\n         * @returns {String} Returns a virtual/temporary URL for the recorded \"Blob\".\r\n         */\r\n        toURL: function() {\r\n            if (!mediaRecorder) {\r\n                warningLog();\r\n                return;\r\n            }\r\n\r\n            return URL.createObjectURL(mediaRecorder.blob);\r\n        },\r\n\r\n        /**\r\n         * Get internal recording object (i.e. internal module) e.g. MutliStreamRecorder, MediaStreamRecorder, StereoAudioRecorder or WhammyRecorder etc.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * var internalRecorder = recorder.getInternalRecorder();\r\n         * if(internalRecorder instanceof MultiStreamRecorder) {\r\n         *     internalRecorder.addStreams([newAudioStream]);\r\n         *     internalRecorder.resetVideoStreams([screenStream]);\r\n         * }\r\n         * @returns {Object} Returns internal recording object.\r\n         */\r\n        getInternalRecorder: function() {\r\n            return mediaRecorder;\r\n        },\r\n\r\n        /**\r\n         * Invoke save-as dialog to save the recorded blob into your disk.\r\n         * @param {string} fileName - Set your own file name.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     this.save('file-name');\r\n         *\r\n         *     // or manually:\r\n         *     invokeSaveAsDialog(this.getBlob(), 'filename.webm');\r\n         * });\r\n         */\r\n        save: function(fileName) {\r\n            if (!mediaRecorder) {\r\n                warningLog();\r\n                return;\r\n            }\r\n\r\n            invokeSaveAsDialog(mediaRecorder.blob, fileName);\r\n        },\r\n\r\n        /**\r\n         * This method gets a blob from indexed-DB storage.\r\n         * @param {function} callback - Callback to get the recorded blob.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.getFromDisk(function(dataURL) {\r\n         *     video.src = dataURL;\r\n         * });\r\n         */\r\n        getFromDisk: function(callback) {\r\n            if (!mediaRecorder) {\r\n                warningLog();\r\n                return;\r\n            }\r\n\r\n            RecordRTC.getFromDisk(config.type, callback);\r\n        },\r\n\r\n        /**\r\n         * This method appends an array of webp images to the recorded video-blob. It takes an \"array\" object.\r\n         * @type {Array.<Array>}\r\n         * @param {Array} arrayOfWebPImages - Array of webp images.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @todo This method should be deprecated.\r\n         * @example\r\n         * var arrayOfWebPImages = [];\r\n         * arrayOfWebPImages.push({\r\n         *     duration: index,\r\n         *     image: 'data:image/webp;base64,...'\r\n         * });\r\n         * recorder.setAdvertisementArray(arrayOfWebPImages);\r\n         */\r\n        setAdvertisementArray: function(arrayOfWebPImages) {\r\n            config.advertisement = [];\r\n\r\n            var length = arrayOfWebPImages.length;\r\n            for (var i = 0; i < length; i++) {\r\n                config.advertisement.push({\r\n                    duration: i,\r\n                    image: arrayOfWebPImages[i]\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * It is equivalent to <code class=\"str\">\"recorder.getBlob()\"</code> method. Usage of \"getBlob\" is recommended, though.\r\n         * @property {Blob} blob - Recorded Blob can be accessed using this property.\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @readonly\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     var blob = this.blob;\r\n         *\r\n         *     // below one is recommended\r\n         *     var blob = this.getBlob();\r\n         * });\r\n         */\r\n        blob: null,\r\n\r\n        /**\r\n         * This works only with {recorderType:StereoAudioRecorder}. Use this property on \"stopRecording\" to verify the encoder's sample-rates.\r\n         * @property {number} bufferSize - Buffer-size used to encode the WAV container\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @readonly\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     alert('Recorder used this buffer-size: ' + this.bufferSize);\r\n         * });\r\n         */\r\n        bufferSize: 0,\r\n\r\n        /**\r\n         * This works only with {recorderType:StereoAudioRecorder}. Use this property on \"stopRecording\" to verify the encoder's sample-rates.\r\n         * @property {number} sampleRate - Sample-rates used to encode the WAV container\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @readonly\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     alert('Recorder used these sample-rates: ' + this.sampleRate);\r\n         * });\r\n         */\r\n        sampleRate: 0,\r\n\r\n        /**\r\n         * {recorderType:StereoAudioRecorder} returns ArrayBuffer object.\r\n         * @property {ArrayBuffer} buffer - Audio ArrayBuffer, supported only in Chrome.\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @readonly\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     var arrayBuffer = this.buffer;\r\n         *     alert(arrayBuffer.byteLength);\r\n         * });\r\n         */\r\n        buffer: null,\r\n\r\n        /**\r\n         * This method resets the recorder. So that you can reuse single recorder instance many times.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.reset();\r\n         * recorder.startRecording();\r\n         */\r\n        reset: function() {\r\n            if (self.state === 'recording' && !config.disableLogs) {\r\n                console.warn('Stop an active recorder.');\r\n            }\r\n\r\n            if (mediaRecorder && typeof mediaRecorder.clearRecordedData === 'function') {\r\n                mediaRecorder.clearRecordedData();\r\n            }\r\n            mediaRecorder = null;\r\n            setState('inactive');\r\n            self.blob = null;\r\n        },\r\n\r\n        /**\r\n         * This method is called whenever recorder's state changes. Use this as an \"event\".\r\n         * @property {String} state - A recorder's state can be: recording, paused, stopped or inactive.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.onStateChanged = function(state) {\r\n         *     console.log('Recorder state: ', state);\r\n         * };\r\n         */\r\n        onStateChanged: function(state) {\r\n            if (!config.disableLogs) {\r\n                console.log('Recorder state changed:', state);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * A recorder can have inactive, recording, paused or stopped states.\r\n         * @property {String} state - A recorder's state can be: recording, paused, stopped or inactive.\r\n         * @memberof RecordRTC\r\n         * @static\r\n         * @readonly\r\n         * @example\r\n         * // this looper function will keep you updated about the recorder's states.\r\n         * (function looper() {\r\n         *     document.querySelector('h1').innerHTML = 'Recorder\\'s state is: ' + recorder.state;\r\n         *     if(recorder.state === 'stopped') return; // ignore+stop\r\n         *     setTimeout(looper, 1000); // update after every 3-seconds\r\n         * })();\r\n         * recorder.startRecording();\r\n         */\r\n        state: 'inactive',\r\n\r\n        /**\r\n         * Get recorder's readonly state.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @example\r\n         * var state = recorder.getState();\r\n         * @returns {String} Returns recording state.\r\n         */\r\n        getState: function() {\r\n            return self.state;\r\n        },\r\n\r\n        /**\r\n         * Destroy RecordRTC instance. Clear all recorders and objects.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @example\r\n         * recorder.destroy();\r\n         */\r\n        destroy: function() {\r\n            var disableLogsCache = config.disableLogs;\r\n\r\n            config = {\r\n                disableLogs: true\r\n            };\r\n            self.reset();\r\n            setState('destroyed');\r\n            returnObject = self = null;\r\n\r\n            if (Storage.AudioContextConstructor) {\r\n                Storage.AudioContextConstructor.close();\r\n                Storage.AudioContextConstructor = null;\r\n            }\r\n\r\n            config.disableLogs = disableLogsCache;\r\n\r\n            if (!config.disableLogs) {\r\n                console.log('RecordRTC is destroyed.');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * RecordRTC version number\r\n         * @property {String} version - Release version number.\r\n         * @memberof RecordRTC\r\n         * @static\r\n         * @readonly\r\n         * @example\r\n         * alert(recorder.version);\r\n         */\r\n        version: '5.6.2'\r\n    };\r\n\r\n    if (!this) {\r\n        self = returnObject;\r\n        return returnObject;\r\n    }\r\n\r\n    // if someone wants to use RecordRTC with the \"new\" keyword.\r\n    for (var prop in returnObject) {\r\n        this[prop] = returnObject[prop];\r\n    }\r\n\r\n    self = this;\r\n\r\n    return returnObject;\r\n}\r\n\r\nRecordRTC.version = '5.6.2';\r\n\r\nif (typeof module !== 'undefined' /* && !!module.exports*/ ) {\r\n    module.exports = RecordRTC;\r\n}\r\n\r\nif (typeof define === 'function' && define.amd) {\r\n    define('RecordRTC', [], function() {\r\n        return RecordRTC;\r\n    });\r\n}\n\r\nRecordRTC.getFromDisk = function(type, callback) {\r\n    if (!callback) {\r\n        throw 'callback is mandatory.';\r\n    }\r\n\r\n    console.log('Getting recorded ' + (type === 'all' ? 'blobs' : type + ' blob ') + ' from disk!');\r\n    DiskStorage.Fetch(function(dataURL, _type) {\r\n        if (type !== 'all' && _type === type + 'Blob' && callback) {\r\n            callback(dataURL);\r\n        }\r\n\r\n        if (type === 'all' && callback) {\r\n            callback(dataURL, _type.replace('Blob', ''));\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * This method can be used to store recorded blobs into IndexedDB storage.\r\n * @param {object} options - {audio: Blob, video: Blob, gif: Blob}\r\n * @method\r\n * @memberof RecordRTC\r\n * @example\r\n * RecordRTC.writeToDisk({\r\n *     audio: audioBlob,\r\n *     video: videoBlob,\r\n *     gif  : gifBlob\r\n * });\r\n */\r\nRecordRTC.writeToDisk = function(options) {\r\n    console.log('Writing recorded blob(s) to disk!');\r\n    options = options || {};\r\n    if (options.audio && options.video && options.gif) {\r\n        options.audio.getDataURL(function(audioDataURL) {\r\n            options.video.getDataURL(function(videoDataURL) {\r\n                options.gif.getDataURL(function(gifDataURL) {\r\n                    DiskStorage.Store({\r\n                        audioBlob: audioDataURL,\r\n                        videoBlob: videoDataURL,\r\n                        gifBlob: gifDataURL\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    } else if (options.audio && options.video) {\r\n        options.audio.getDataURL(function(audioDataURL) {\r\n            options.video.getDataURL(function(videoDataURL) {\r\n                DiskStorage.Store({\r\n                    audioBlob: audioDataURL,\r\n                    videoBlob: videoDataURL\r\n                });\r\n            });\r\n        });\r\n    } else if (options.audio && options.gif) {\r\n        options.audio.getDataURL(function(audioDataURL) {\r\n            options.gif.getDataURL(function(gifDataURL) {\r\n                DiskStorage.Store({\r\n                    audioBlob: audioDataURL,\r\n                    gifBlob: gifDataURL\r\n                });\r\n            });\r\n        });\r\n    } else if (options.video && options.gif) {\r\n        options.video.getDataURL(function(videoDataURL) {\r\n            options.gif.getDataURL(function(gifDataURL) {\r\n                DiskStorage.Store({\r\n                    videoBlob: videoDataURL,\r\n                    gifBlob: gifDataURL\r\n                });\r\n            });\r\n        });\r\n    } else if (options.audio) {\r\n        options.audio.getDataURL(function(audioDataURL) {\r\n            DiskStorage.Store({\r\n                audioBlob: audioDataURL\r\n            });\r\n        });\r\n    } else if (options.video) {\r\n        options.video.getDataURL(function(videoDataURL) {\r\n            DiskStorage.Store({\r\n                videoBlob: videoDataURL\r\n            });\r\n        });\r\n    } else if (options.gif) {\r\n        options.gif.getDataURL(function(gifDataURL) {\r\n            DiskStorage.Store({\r\n                gifBlob: gifDataURL\r\n            });\r\n        });\r\n    }\r\n};\n\r\n// __________________________\r\n// RecordRTC-Configuration.js\r\n\r\n/**\r\n * {@link RecordRTCConfiguration} is an inner/private helper for {@link RecordRTC}.\r\n * @summary It configures the 2nd parameter passed over {@link RecordRTC} and returns a valid \"config\" object.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef RecordRTCConfiguration\r\n * @class\r\n * @example\r\n * var options = RecordRTCConfiguration(mediaStream, options);\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {type:\"video\", disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, getNativeBlob:true, etc.}\r\n */\r\n\r\nfunction RecordRTCConfiguration(mediaStream, config) {\r\n    if (!config.recorderType && !config.type) {\r\n        if (!!config.audio && !!config.video) {\r\n            config.type = 'video';\r\n        } else if (!!config.audio && !config.video) {\r\n            config.type = 'audio';\r\n        }\r\n    }\r\n\r\n    if (config.recorderType && !config.type) {\r\n        if (config.recorderType === WhammyRecorder || config.recorderType === CanvasRecorder || (typeof WebAssemblyRecorder !== 'undefined' && config.recorderType === WebAssemblyRecorder)) {\r\n            config.type = 'video';\r\n        } else if (config.recorderType === GifRecorder) {\r\n            config.type = 'gif';\r\n        } else if (config.recorderType === StereoAudioRecorder) {\r\n            config.type = 'audio';\r\n        } else if (config.recorderType === MediaStreamRecorder) {\r\n            if (getTracks(mediaStream, 'audio').length && getTracks(mediaStream, 'video').length) {\r\n                config.type = 'video';\r\n            } else if (!getTracks(mediaStream, 'audio').length && getTracks(mediaStream, 'video').length) {\r\n                config.type = 'video';\r\n            } else if (getTracks(mediaStream, 'audio').length && !getTracks(mediaStream, 'video').length) {\r\n                config.type = 'audio';\r\n            } else {\r\n                // config.type = 'UnKnown';\r\n            }\r\n        }\r\n    }\r\n\r\n    if (typeof MediaStreamRecorder !== 'undefined' && typeof MediaRecorder !== 'undefined' && 'requestData' in MediaRecorder.prototype) {\r\n        if (!config.mimeType) {\r\n            config.mimeType = 'video/webm';\r\n        }\r\n\r\n        if (!config.type) {\r\n            config.type = config.mimeType.split('/')[0];\r\n        }\r\n\r\n        if (!config.bitsPerSecond) {\r\n            // config.bitsPerSecond = 128000;\r\n        }\r\n    }\r\n\r\n    // consider default type=audio\r\n    if (!config.type) {\r\n        if (config.mimeType) {\r\n            config.type = config.mimeType.split('/')[0];\r\n        }\r\n        if (!config.type) {\r\n            config.type = 'audio';\r\n        }\r\n    }\r\n\r\n    return config;\r\n}\n\r\n// __________________\r\n// GetRecorderType.js\r\n\r\n/**\r\n * {@link GetRecorderType} is an inner/private helper for {@link RecordRTC}.\r\n * @summary It returns best recorder-type available for your browser.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef GetRecorderType\r\n * @class\r\n * @example\r\n * var RecorderType = GetRecorderType(options);\r\n * var recorder = new RecorderType(options);\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {type:\"video\", disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, etc.}\r\n */\r\n\r\nfunction GetRecorderType(mediaStream, config) {\r\n    var recorder;\r\n\r\n    // StereoAudioRecorder can work with all three: Edge, Firefox and Chrome\r\n    // todo: detect if it is Edge, then auto use: StereoAudioRecorder\r\n    if (isChrome || isEdge || isOpera) {\r\n        // Media Stream Recording API has not been implemented in chrome yet;\r\n        // That's why using WebAudio API to record stereo audio in WAV format\r\n        recorder = StereoAudioRecorder;\r\n    }\r\n\r\n    if (typeof MediaRecorder !== 'undefined' && 'requestData' in MediaRecorder.prototype && !isChrome) {\r\n        recorder = MediaStreamRecorder;\r\n    }\r\n\r\n    // video recorder (in WebM format)\r\n    if (config.type === 'video' && (isChrome || isOpera)) {\r\n        recorder = WhammyRecorder;\r\n\r\n        if (typeof WebAssemblyRecorder !== 'undefined' && typeof ReadableStream !== 'undefined') {\r\n            recorder = WebAssemblyRecorder;\r\n        }\r\n    }\r\n\r\n    // video recorder (in Gif format)\r\n    if (config.type === 'gif') {\r\n        recorder = GifRecorder;\r\n    }\r\n\r\n    // html2canvas recording!\r\n    if (config.type === 'canvas') {\r\n        recorder = CanvasRecorder;\r\n    }\r\n\r\n    if (isMediaRecorderCompatible() && recorder !== CanvasRecorder && recorder !== GifRecorder && typeof MediaRecorder !== 'undefined' && 'requestData' in MediaRecorder.prototype) {\r\n        if (getTracks(mediaStream, 'video').length || getTracks(mediaStream, 'audio').length) {\r\n            // audio-only recording\r\n            if (config.type === 'audio') {\r\n                if (typeof MediaRecorder.isTypeSupported === 'function' && MediaRecorder.isTypeSupported('audio/webm')) {\r\n                    recorder = MediaStreamRecorder;\r\n                }\r\n                // else recorder = StereoAudioRecorder;\r\n            } else {\r\n                // video or screen tracks\r\n                if (typeof MediaRecorder.isTypeSupported === 'function' && MediaRecorder.isTypeSupported('video/webm')) {\r\n                    recorder = MediaStreamRecorder;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if (mediaStream instanceof Array && mediaStream.length) {\r\n        recorder = MultiStreamRecorder;\r\n    }\r\n\r\n    if (config.recorderType) {\r\n        recorder = config.recorderType;\r\n    }\r\n\r\n    if (!config.disableLogs && !!recorder && !!recorder.name) {\r\n        console.log('Using recorderType:', recorder.name || recorder.constructor.name);\r\n    }\r\n\r\n    if (!recorder && isSafari) {\r\n        recorder = MediaStreamRecorder;\r\n    }\r\n\r\n    return recorder;\r\n}\n\r\n// _____________\r\n// MRecordRTC.js\r\n\r\n/**\r\n * MRecordRTC runs on top of {@link RecordRTC} to bring multiple recordings in a single place, by providing simple API.\r\n * @summary MRecordRTC stands for \"Multiple-RecordRTC\".\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef MRecordRTC\r\n * @class\r\n * @example\r\n * var recorder = new MRecordRTC();\r\n * recorder.addStream(MediaStream);\r\n * recorder.mediaType = {\r\n *     audio: true, // or StereoAudioRecorder or MediaStreamRecorder\r\n *     video: true, // or WhammyRecorder or MediaStreamRecorder or WebAssemblyRecorder or CanvasRecorder\r\n *     gif: true    // or GifRecorder\r\n * };\r\n * // mimeType is optional and should be set only in advance cases.\r\n * recorder.mimeType = {\r\n *     audio: 'audio/wav',\r\n *     video: 'video/webm',\r\n *     gif:   'image/gif'\r\n * };\r\n * recorder.startRecording();\r\n * @see For further information:\r\n * @see {@link https://github.com/muaz-khan/RecordRTC/tree/master/MRecordRTC|MRecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @requires {@link RecordRTC}\r\n */\r\n\r\nfunction MRecordRTC(mediaStream) {\r\n\r\n    /**\r\n     * This method attaches MediaStream object to {@link MRecordRTC}.\r\n     * @param {MediaStream} mediaStream - A MediaStream object, either fetched using getUserMedia API, or generated using captureStreamUntilEnded or WebAudio API.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.addStream(MediaStream);\r\n     */\r\n    this.addStream = function(_mediaStream) {\r\n        if (_mediaStream) {\r\n            mediaStream = _mediaStream;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This property can be used to set the recording type e.g. audio, or video, or gif, or canvas.\r\n     * @property {object} mediaType - {audio: true, video: true, gif: true}\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * var recorder = new MRecordRTC();\r\n     * recorder.mediaType = {\r\n     *     audio: true, // TRUE or StereoAudioRecorder or MediaStreamRecorder\r\n     *     video: true, // TRUE or WhammyRecorder or MediaStreamRecorder or WebAssemblyRecorder or CanvasRecorder\r\n     *     gif  : true  // TRUE or GifRecorder\r\n     * };\r\n     */\r\n    this.mediaType = {\r\n        audio: true,\r\n        video: true\r\n    };\r\n\r\n    /**\r\n     * This method starts recording.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.startRecording();\r\n     */\r\n    this.startRecording = function() {\r\n        var mediaType = this.mediaType;\r\n        var recorderType;\r\n        var mimeType = this.mimeType || {\r\n            audio: null,\r\n            video: null,\r\n            gif: null\r\n        };\r\n\r\n        if (typeof mediaType.audio !== 'function' && isMediaRecorderCompatible() && !getTracks(mediaStream, 'audio').length) {\r\n            mediaType.audio = false;\r\n        }\r\n\r\n        if (typeof mediaType.video !== 'function' && isMediaRecorderCompatible() && !getTracks(mediaStream, 'video').length) {\r\n            mediaType.video = false;\r\n        }\r\n\r\n        if (typeof mediaType.gif !== 'function' && isMediaRecorderCompatible() && !getTracks(mediaStream, 'video').length) {\r\n            mediaType.gif = false;\r\n        }\r\n\r\n        if (!mediaType.audio && !mediaType.video && !mediaType.gif) {\r\n            throw 'MediaStream must have either audio or video tracks.';\r\n        }\r\n\r\n        if (!!mediaType.audio) {\r\n            recorderType = null;\r\n            if (typeof mediaType.audio === 'function') {\r\n                recorderType = mediaType.audio;\r\n            }\r\n\r\n            this.audioRecorder = new RecordRTC(mediaStream, {\r\n                type: 'audio',\r\n                bufferSize: this.bufferSize,\r\n                sampleRate: this.sampleRate,\r\n                numberOfAudioChannels: this.numberOfAudioChannels || 2,\r\n                disableLogs: this.disableLogs,\r\n                recorderType: recorderType,\r\n                mimeType: mimeType.audio,\r\n                timeSlice: this.timeSlice,\r\n                onTimeStamp: this.onTimeStamp\r\n            });\r\n\r\n            if (!mediaType.video) {\r\n                this.audioRecorder.startRecording();\r\n            }\r\n        }\r\n\r\n        if (!!mediaType.video) {\r\n            recorderType = null;\r\n            if (typeof mediaType.video === 'function') {\r\n                recorderType = mediaType.video;\r\n            }\r\n\r\n            var newStream = mediaStream;\r\n\r\n            if (isMediaRecorderCompatible() && !!mediaType.audio && typeof mediaType.audio === 'function') {\r\n                var videoTrack = getTracks(mediaStream, 'video')[0];\r\n\r\n                if (isFirefox) {\r\n                    newStream = new MediaStream();\r\n                    newStream.addTrack(videoTrack);\r\n\r\n                    if (recorderType && recorderType === WhammyRecorder) {\r\n                        // Firefox does NOT supports webp-encoding yet\r\n                        // But Firefox do supports WebAssemblyRecorder\r\n                        recorderType = MediaStreamRecorder;\r\n                    }\r\n                } else {\r\n                    newStream = new MediaStream();\r\n                    newStream.addTrack(videoTrack);\r\n                }\r\n            }\r\n\r\n            this.videoRecorder = new RecordRTC(newStream, {\r\n                type: 'video',\r\n                video: this.video,\r\n                canvas: this.canvas,\r\n                frameInterval: this.frameInterval || 10,\r\n                disableLogs: this.disableLogs,\r\n                recorderType: recorderType,\r\n                mimeType: mimeType.video,\r\n                timeSlice: this.timeSlice,\r\n                onTimeStamp: this.onTimeStamp,\r\n                workerPath: this.workerPath,\r\n                webAssemblyPath: this.webAssemblyPath,\r\n                frameRate: this.frameRate, // used by WebAssemblyRecorder; values: usually 30; accepts any.\r\n                bitrate: this.bitrate // used by WebAssemblyRecorder; values: 0 to 1000+\r\n            });\r\n\r\n            if (!mediaType.audio) {\r\n                this.videoRecorder.startRecording();\r\n            }\r\n        }\r\n\r\n        if (!!mediaType.audio && !!mediaType.video) {\r\n            var self = this;\r\n\r\n            var isSingleRecorder = isMediaRecorderCompatible() === true;\r\n\r\n            if (mediaType.audio instanceof StereoAudioRecorder && !!mediaType.video) {\r\n                isSingleRecorder = false;\r\n            } else if (mediaType.audio !== true && mediaType.video !== true && mediaType.audio !== mediaType.video) {\r\n                isSingleRecorder = false;\r\n            }\r\n\r\n            if (isSingleRecorder === true) {\r\n                self.audioRecorder = null;\r\n                self.videoRecorder.startRecording();\r\n            } else {\r\n                self.videoRecorder.initRecorder(function() {\r\n                    self.audioRecorder.initRecorder(function() {\r\n                        // Both recorders are ready to record things accurately\r\n                        self.videoRecorder.startRecording();\r\n                        self.audioRecorder.startRecording();\r\n                    });\r\n                });\r\n            }\r\n        }\r\n\r\n        if (!!mediaType.gif) {\r\n            recorderType = null;\r\n            if (typeof mediaType.gif === 'function') {\r\n                recorderType = mediaType.gif;\r\n            }\r\n            this.gifRecorder = new RecordRTC(mediaStream, {\r\n                type: 'gif',\r\n                frameRate: this.frameRate || 200,\r\n                quality: this.quality || 10,\r\n                disableLogs: this.disableLogs,\r\n                recorderType: recorderType,\r\n                mimeType: mimeType.gif\r\n            });\r\n            this.gifRecorder.startRecording();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method stops recording.\r\n     * @param {function} callback - Callback function is invoked when all encoders finished their jobs.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.stopRecording(function(recording){\r\n     *     var audioBlob = recording.audio;\r\n     *     var videoBlob = recording.video;\r\n     *     var gifBlob   = recording.gif;\r\n     * });\r\n     */\r\n    this.stopRecording = function(callback) {\r\n        callback = callback || function() {};\r\n\r\n        if (this.audioRecorder) {\r\n            this.audioRecorder.stopRecording(function(blobURL) {\r\n                callback(blobURL, 'audio');\r\n            });\r\n        }\r\n\r\n        if (this.videoRecorder) {\r\n            this.videoRecorder.stopRecording(function(blobURL) {\r\n                callback(blobURL, 'video');\r\n            });\r\n        }\r\n\r\n        if (this.gifRecorder) {\r\n            this.gifRecorder.stopRecording(function(blobURL) {\r\n                callback(blobURL, 'gif');\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method pauses recording.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.pauseRecording();\r\n     */\r\n    this.pauseRecording = function() {\r\n        if (this.audioRecorder) {\r\n            this.audioRecorder.pauseRecording();\r\n        }\r\n\r\n        if (this.videoRecorder) {\r\n            this.videoRecorder.pauseRecording();\r\n        }\r\n\r\n        if (this.gifRecorder) {\r\n            this.gifRecorder.pauseRecording();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resumes recording.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.resumeRecording();\r\n     */\r\n    this.resumeRecording = function() {\r\n        if (this.audioRecorder) {\r\n            this.audioRecorder.resumeRecording();\r\n        }\r\n\r\n        if (this.videoRecorder) {\r\n            this.videoRecorder.resumeRecording();\r\n        }\r\n\r\n        if (this.gifRecorder) {\r\n            this.gifRecorder.resumeRecording();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method can be used to manually get all recorded blobs.\r\n     * @param {function} callback - All recorded blobs are passed back to the \"callback\" function.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.getBlob(function(recording){\r\n     *     var audioBlob = recording.audio;\r\n     *     var videoBlob = recording.video;\r\n     *     var gifBlob   = recording.gif;\r\n     * });\r\n     * // or\r\n     * var audioBlob = recorder.getBlob().audio;\r\n     * var videoBlob = recorder.getBlob().video;\r\n     */\r\n    this.getBlob = function(callback) {\r\n        var output = {};\r\n\r\n        if (this.audioRecorder) {\r\n            output.audio = this.audioRecorder.getBlob();\r\n        }\r\n\r\n        if (this.videoRecorder) {\r\n            output.video = this.videoRecorder.getBlob();\r\n        }\r\n\r\n        if (this.gifRecorder) {\r\n            output.gif = this.gifRecorder.getBlob();\r\n        }\r\n\r\n        if (callback) {\r\n            callback(output);\r\n        }\r\n\r\n        return output;\r\n    };\r\n\r\n    /**\r\n     * Destroy all recorder instances.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.destroy();\r\n     */\r\n    this.destroy = function() {\r\n        if (this.audioRecorder) {\r\n            this.audioRecorder.destroy();\r\n            this.audioRecorder = null;\r\n        }\r\n\r\n        if (this.videoRecorder) {\r\n            this.videoRecorder.destroy();\r\n            this.videoRecorder = null;\r\n        }\r\n\r\n        if (this.gifRecorder) {\r\n            this.gifRecorder.destroy();\r\n            this.gifRecorder = null;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method can be used to manually get all recorded blobs' DataURLs.\r\n     * @param {function} callback - All recorded blobs' DataURLs are passed back to the \"callback\" function.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.getDataURL(function(recording){\r\n     *     var audioDataURL = recording.audio;\r\n     *     var videoDataURL = recording.video;\r\n     *     var gifDataURL   = recording.gif;\r\n     * });\r\n     */\r\n    this.getDataURL = function(callback) {\r\n        this.getBlob(function(blob) {\r\n            if (blob.audio && blob.video) {\r\n                getDataURL(blob.audio, function(_audioDataURL) {\r\n                    getDataURL(blob.video, function(_videoDataURL) {\r\n                        callback({\r\n                            audio: _audioDataURL,\r\n                            video: _videoDataURL\r\n                        });\r\n                    });\r\n                });\r\n            } else if (blob.audio) {\r\n                getDataURL(blob.audio, function(_audioDataURL) {\r\n                    callback({\r\n                        audio: _audioDataURL\r\n                    });\r\n                });\r\n            } else if (blob.video) {\r\n                getDataURL(blob.video, function(_videoDataURL) {\r\n                    callback({\r\n                        video: _videoDataURL\r\n                    });\r\n                });\r\n            }\r\n        });\r\n\r\n        function getDataURL(blob, callback00) {\r\n            if (typeof Worker !== 'undefined') {\r\n                var webWorker = processInWebWorker(function readFile(_blob) {\r\n                    postMessage(new FileReaderSync().readAsDataURL(_blob));\r\n                });\r\n\r\n                webWorker.onmessage = function(event) {\r\n                    callback00(event.data);\r\n                };\r\n\r\n                webWorker.postMessage(blob);\r\n            } else {\r\n                var reader = new FileReader();\r\n                reader.readAsDataURL(blob);\r\n                reader.onload = function(event) {\r\n                    callback00(event.target.result);\r\n                };\r\n            }\r\n        }\r\n\r\n        function processInWebWorker(_function) {\r\n            var blob = URL.createObjectURL(new Blob([_function.toString(),\r\n                'this.onmessage =  function (eee) {' + _function.name + '(eee.data);}'\r\n            ], {\r\n                type: 'application/javascript'\r\n            }));\r\n\r\n            var worker = new Worker(blob);\r\n            var url;\r\n            if (typeof URL !== 'undefined') {\r\n                url = URL;\r\n            } else if (typeof webkitURL !== 'undefined') {\r\n                url = webkitURL;\r\n            } else {\r\n                throw 'Neither URL nor webkitURL detected.';\r\n            }\r\n            url.revokeObjectURL(blob);\r\n            return worker;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method can be used to ask {@link MRecordRTC} to write all recorded blobs into IndexedDB storage.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.writeToDisk();\r\n     */\r\n    this.writeToDisk = function() {\r\n        RecordRTC.writeToDisk({\r\n            audio: this.audioRecorder,\r\n            video: this.videoRecorder,\r\n            gif: this.gifRecorder\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method can be used to invoke a save-as dialog for all recorded blobs.\r\n     * @param {object} args - {audio: 'audio-name', video: 'video-name', gif: 'gif-name'}\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.save({\r\n     *     audio: 'audio-file-name',\r\n     *     video: 'video-file-name',\r\n     *     gif  : 'gif-file-name'\r\n     * });\r\n     */\r\n    this.save = function(args) {\r\n        args = args || {\r\n            audio: true,\r\n            video: true,\r\n            gif: true\r\n        };\r\n\r\n        if (!!args.audio && this.audioRecorder) {\r\n            this.audioRecorder.save(typeof args.audio === 'string' ? args.audio : '');\r\n        }\r\n\r\n        if (!!args.video && this.videoRecorder) {\r\n            this.videoRecorder.save(typeof args.video === 'string' ? args.video : '');\r\n        }\r\n        if (!!args.gif && this.gifRecorder) {\r\n            this.gifRecorder.save(typeof args.gif === 'string' ? args.gif : '');\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\n * This method can be used to get all recorded blobs from IndexedDB storage.\r\n * @param {string} type - 'all' or 'audio' or 'video' or 'gif'\r\n * @param {function} callback - Callback function to get all stored blobs.\r\n * @method\r\n * @memberof MRecordRTC\r\n * @example\r\n * MRecordRTC.getFromDisk('all', function(dataURL, type){\r\n *     if(type === 'audio') { }\r\n *     if(type === 'video') { }\r\n *     if(type === 'gif')   { }\r\n * });\r\n */\r\nMRecordRTC.getFromDisk = RecordRTC.getFromDisk;\r\n\r\n/**\r\n * This method can be used to store recorded blobs into IndexedDB storage.\r\n * @param {object} options - {audio: Blob, video: Blob, gif: Blob}\r\n * @method\r\n * @memberof MRecordRTC\r\n * @example\r\n * MRecordRTC.writeToDisk({\r\n *     audio: audioBlob,\r\n *     video: videoBlob,\r\n *     gif  : gifBlob\r\n * });\r\n */\r\nMRecordRTC.writeToDisk = RecordRTC.writeToDisk;\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.MRecordRTC = MRecordRTC;\r\n}\n\r\nvar browserFakeUserAgent = 'Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45';\r\n\r\n(function(that) {\r\n    if (!that) {\r\n        return;\r\n    }\r\n\r\n    if (typeof window !== 'undefined') {\r\n        return;\r\n    }\r\n\r\n    if (typeof global === 'undefined') {\r\n        return;\r\n    }\r\n\r\n    global.navigator = {\r\n        userAgent: browserFakeUserAgent,\r\n        getUserMedia: function() {}\r\n    };\r\n\r\n    if (!global.console) {\r\n        global.console = {};\r\n    }\r\n\r\n    if (typeof global.console.log === 'undefined' || typeof global.console.error === 'undefined') {\r\n        global.console.error = global.console.log = global.console.log || function() {\r\n            console.log(arguments);\r\n        };\r\n    }\r\n\r\n    if (typeof document === 'undefined') {\r\n        /*global document:true */\r\n        that.document = {\r\n            documentElement: {\r\n                appendChild: function() {\r\n                    return '';\r\n                }\r\n            }\r\n        };\r\n\r\n        document.createElement = document.captureStream = document.mozCaptureStream = function() {\r\n            var obj = {\r\n                getContext: function() {\r\n                    return obj;\r\n                },\r\n                play: function() {},\r\n                pause: function() {},\r\n                drawImage: function() {},\r\n                toDataURL: function() {\r\n                    return '';\r\n                },\r\n                style: {}\r\n            };\r\n            return obj;\r\n        };\r\n\r\n        that.HTMLVideoElement = function() {};\r\n    }\r\n\r\n    if (typeof location === 'undefined') {\r\n        /*global location:true */\r\n        that.location = {\r\n            protocol: 'file:',\r\n            href: '',\r\n            hash: ''\r\n        };\r\n    }\r\n\r\n    if (typeof screen === 'undefined') {\r\n        /*global screen:true */\r\n        that.screen = {\r\n            width: 0,\r\n            height: 0\r\n        };\r\n    }\r\n\r\n    if (typeof URL === 'undefined') {\r\n        /*global screen:true */\r\n        that.URL = {\r\n            createObjectURL: function() {\r\n                return '';\r\n            },\r\n            revokeObjectURL: function() {\r\n                return '';\r\n            }\r\n        };\r\n    }\r\n\r\n    /*global window:true */\r\n    that.window = global;\r\n})(typeof global !== 'undefined' ? global : null);\n\r\n// _____________________________\r\n// Cross-Browser-Declarations.js\r\n\r\n// animation-frame used in WebM recording\r\n\r\n/*jshint -W079 */\r\nvar requestAnimationFrame = window.requestAnimationFrame;\r\nif (typeof requestAnimationFrame === 'undefined') {\r\n    if (typeof webkitRequestAnimationFrame !== 'undefined') {\r\n        /*global requestAnimationFrame:true */\r\n        requestAnimationFrame = webkitRequestAnimationFrame;\r\n    } else if (typeof mozRequestAnimationFrame !== 'undefined') {\r\n        /*global requestAnimationFrame:true */\r\n        requestAnimationFrame = mozRequestAnimationFrame;\r\n    } else if (typeof msRequestAnimationFrame !== 'undefined') {\r\n        /*global requestAnimationFrame:true */\r\n        requestAnimationFrame = msRequestAnimationFrame;\r\n    } else if (typeof requestAnimationFrame === 'undefined') {\r\n        // via: https://gist.github.com/paulirish/1579671\r\n        var lastTime = 0;\r\n\r\n        /*global requestAnimationFrame:true */\r\n        requestAnimationFrame = function(callback, element) {\r\n            var currTime = new Date().getTime();\r\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n            var id = setTimeout(function() {\r\n                callback(currTime + timeToCall);\r\n            }, timeToCall);\r\n            lastTime = currTime + timeToCall;\r\n            return id;\r\n        };\r\n    }\r\n}\r\n\r\n/*jshint -W079 */\r\nvar cancelAnimationFrame = window.cancelAnimationFrame;\r\nif (typeof cancelAnimationFrame === 'undefined') {\r\n    if (typeof webkitCancelAnimationFrame !== 'undefined') {\r\n        /*global cancelAnimationFrame:true */\r\n        cancelAnimationFrame = webkitCancelAnimationFrame;\r\n    } else if (typeof mozCancelAnimationFrame !== 'undefined') {\r\n        /*global cancelAnimationFrame:true */\r\n        cancelAnimationFrame = mozCancelAnimationFrame;\r\n    } else if (typeof msCancelAnimationFrame !== 'undefined') {\r\n        /*global cancelAnimationFrame:true */\r\n        cancelAnimationFrame = msCancelAnimationFrame;\r\n    } else if (typeof cancelAnimationFrame === 'undefined') {\r\n        /*global cancelAnimationFrame:true */\r\n        cancelAnimationFrame = function(id) {\r\n            clearTimeout(id);\r\n        };\r\n    }\r\n}\r\n\r\n// WebAudio API representer\r\nvar AudioContext = window.AudioContext;\r\n\r\nif (typeof AudioContext === 'undefined') {\r\n    if (typeof webkitAudioContext !== 'undefined') {\r\n        /*global AudioContext:true */\r\n        AudioContext = webkitAudioContext;\r\n    }\r\n\r\n    if (typeof mozAudioContext !== 'undefined') {\r\n        /*global AudioContext:true */\r\n        AudioContext = mozAudioContext;\r\n    }\r\n}\r\n\r\n/*jshint -W079 */\r\nvar URL = window.URL;\r\n\r\nif (typeof URL === 'undefined' && typeof webkitURL !== 'undefined') {\r\n    /*global URL:true */\r\n    URL = webkitURL;\r\n}\r\n\r\nif (typeof navigator !== 'undefined' && typeof navigator.getUserMedia === 'undefined') { // maybe window.navigator?\r\n    if (typeof navigator.webkitGetUserMedia !== 'undefined') {\r\n        navigator.getUserMedia = navigator.webkitGetUserMedia;\r\n    }\r\n\r\n    if (typeof navigator.mozGetUserMedia !== 'undefined') {\r\n        navigator.getUserMedia = navigator.mozGetUserMedia;\r\n    }\r\n}\r\n\r\nvar isEdge = navigator.userAgent.indexOf('Edge') !== -1 && (!!navigator.msSaveBlob || !!navigator.msSaveOrOpenBlob);\r\nvar isOpera = !!window.opera || navigator.userAgent.indexOf('OPR/') !== -1;\r\nvar isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1 && ('netscape' in window) && / rv:/.test(navigator.userAgent);\r\nvar isChrome = (!isOpera && !isEdge && !!navigator.webkitGetUserMedia) || isElectron() || navigator.userAgent.toLowerCase().indexOf('chrome/') !== -1;\r\n\r\nvar isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\n\r\nif (isSafari && !isChrome && navigator.userAgent.indexOf('CriOS') !== -1) {\r\n    isSafari = false;\r\n    isChrome = true;\r\n}\r\n\r\nvar MediaStream = window.MediaStream;\r\n\r\nif (typeof MediaStream === 'undefined' && typeof webkitMediaStream !== 'undefined') {\r\n    MediaStream = webkitMediaStream;\r\n}\r\n\r\n/*global MediaStream:true */\r\nif (typeof MediaStream !== 'undefined') {\r\n    // override \"stop\" method for all browsers\r\n    if (typeof MediaStream.prototype.stop === 'undefined') {\r\n        MediaStream.prototype.stop = function() {\r\n            this.getTracks().forEach(function(track) {\r\n                track.stop();\r\n            });\r\n        };\r\n    }\r\n}\r\n\r\n// below function via: http://goo.gl/B3ae8c\r\n/**\r\n * Return human-readable file size.\r\n * @param {number} bytes - Pass bytes and get formatted string.\r\n * @returns {string} - formatted string\r\n * @example\r\n * bytesToSize(1024*1024*5) === '5 GB'\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\nfunction bytesToSize(bytes) {\r\n    var k = 1000;\r\n    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n    if (bytes === 0) {\r\n        return '0 Bytes';\r\n    }\r\n    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(k)), 10);\r\n    return (bytes / Math.pow(k, i)).toPrecision(3) + ' ' + sizes[i];\r\n}\r\n\r\n/**\r\n * @param {Blob} file - File or Blob object. This parameter is required.\r\n * @param {string} fileName - Optional file name e.g. \"Recorded-Video.webm\"\r\n * @example\r\n * invokeSaveAsDialog(blob or file, [optional] fileName);\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\nfunction invokeSaveAsDialog(file, fileName) {\r\n    if (!file) {\r\n        throw 'Blob object is required.';\r\n    }\r\n\r\n    if (!file.type) {\r\n        try {\r\n            file.type = 'video/webm';\r\n        } catch (e) {}\r\n    }\r\n\r\n    var fileExtension = (file.type || 'video/webm').split('/')[1];\r\n    if (fileExtension.indexOf(';') !== -1) {\r\n        // extended mimetype, e.g. 'video/webm;codecs=vp8,opus'\r\n        fileExtension = fileExtension.split(';')[0];\r\n    }\r\n    if (fileName && fileName.indexOf('.') !== -1) {\r\n        var splitted = fileName.split('.');\r\n        fileName = splitted[0];\r\n        fileExtension = splitted[1];\r\n    }\r\n\r\n    var fileFullName = (fileName || (Math.round(Math.random() * 9999999999) + 888888888)) + '.' + fileExtension;\r\n\r\n    if (typeof navigator.msSaveOrOpenBlob !== 'undefined') {\r\n        return navigator.msSaveOrOpenBlob(file, fileFullName);\r\n    } else if (typeof navigator.msSaveBlob !== 'undefined') {\r\n        return navigator.msSaveBlob(file, fileFullName);\r\n    }\r\n\r\n    var hyperlink = document.createElement('a');\r\n    hyperlink.href = URL.createObjectURL(file);\r\n    hyperlink.download = fileFullName;\r\n\r\n    hyperlink.style = 'display:none;opacity:0;color:transparent;';\r\n    (document.body || document.documentElement).appendChild(hyperlink);\r\n\r\n    if (typeof hyperlink.click === 'function') {\r\n        hyperlink.click();\r\n    } else {\r\n        hyperlink.target = '_blank';\r\n        hyperlink.dispatchEvent(new MouseEvent('click', {\r\n            view: window,\r\n            bubbles: true,\r\n            cancelable: true\r\n        }));\r\n    }\r\n\r\n    URL.revokeObjectURL(hyperlink.href);\r\n}\r\n\r\n/**\r\n * from: https://github.com/cheton/is-electron/blob/master/index.js\r\n **/\r\nfunction isElectron() {\r\n    // Renderer process\r\n    if (typeof window !== 'undefined' && typeof window.process === 'object' && window.process.type === 'renderer') {\r\n        return true;\r\n    }\r\n\r\n    // Main process\r\n    if (typeof process !== 'undefined' && typeof process.versions === 'object' && !!process.versions.electron) {\r\n        return true;\r\n    }\r\n\r\n    // Detect the user agent when the `nodeIntegration` option is set to true\r\n    if (typeof navigator === 'object' && typeof navigator.userAgent === 'string' && navigator.userAgent.indexOf('Electron') >= 0) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction getTracks(stream, kind) {\r\n    if (!stream || !stream.getTracks) {\r\n        return [];\r\n    }\r\n\r\n    return stream.getTracks().filter(function(t) {\r\n        return t.kind === (kind || 'audio');\r\n    });\r\n}\r\n\r\nfunction setSrcObject(stream, element) {\r\n    if ('srcObject' in element) {\r\n        element.srcObject = stream;\r\n    } else if ('mozSrcObject' in element) {\r\n        element.mozSrcObject = stream;\r\n    } else {\r\n        element.srcObject = stream;\r\n    }\r\n}\r\n\r\n/**\r\n * @param {Blob} file - File or Blob object.\r\n * @param {function} callback - Callback function.\r\n * @example\r\n * getSeekableBlob(blob or file, callback);\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\nfunction getSeekableBlob(inputBlob, callback) {\r\n    // EBML.js copyrights goes to: https://github.com/legokichi/ts-ebml\r\n    if (typeof EBML === 'undefined') {\r\n        throw new Error('Please link: https://www.webrtc-experiment.com/EBML.js');\r\n    }\r\n\r\n    var reader = new EBML.Reader();\r\n    var decoder = new EBML.Decoder();\r\n    var tools = EBML.tools;\r\n\r\n    var fileReader = new FileReader();\r\n    fileReader.onload = function(e) {\r\n        var ebmlElms = decoder.decode(this.result);\r\n        ebmlElms.forEach(function(element) {\r\n            reader.read(element);\r\n        });\r\n        reader.stop();\r\n        var refinedMetadataBuf = tools.makeMetadataSeekable(reader.metadatas, reader.duration, reader.cues);\r\n        var body = this.result.slice(reader.metadataSize);\r\n        var newBlob = new Blob([refinedMetadataBuf, body], {\r\n            type: 'video/webm'\r\n        });\r\n\r\n        callback(newBlob);\r\n    };\r\n    fileReader.readAsArrayBuffer(inputBlob);\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.invokeSaveAsDialog = invokeSaveAsDialog;\r\n    RecordRTC.getTracks = getTracks;\r\n    RecordRTC.getSeekableBlob = getSeekableBlob;\r\n    RecordRTC.bytesToSize = bytesToSize;\r\n    RecordRTC.isElectron = isElectron;\r\n}\r\n\r\n// __________ (used to handle stuff like http://goo.gl/xmE5eg) issue #129\r\n// Storage.js\r\n\r\n/**\r\n * Storage is a standalone object used by {@link RecordRTC} to store reusable objects e.g. \"new AudioContext\".\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @example\r\n * Storage.AudioContext === webkitAudioContext\r\n * @property {webkitAudioContext} AudioContext - Keeps a reference to AudioContext object.\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\n\r\nvar Storage = {};\r\n\r\nif (typeof AudioContext !== 'undefined') {\r\n    Storage.AudioContext = AudioContext;\r\n} else if (typeof webkitAudioContext !== 'undefined') {\r\n    Storage.AudioContext = webkitAudioContext;\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.Storage = Storage;\r\n}\n\r\nfunction isMediaRecorderCompatible() {\r\n    if (isFirefox || isSafari || isEdge) {\r\n        return true;\r\n    }\r\n\r\n    var nVer = navigator.appVersion;\r\n    var nAgt = navigator.userAgent;\r\n    var fullVersion = '' + parseFloat(navigator.appVersion);\r\n    var majorVersion = parseInt(navigator.appVersion, 10);\r\n    var nameOffset, verOffset, ix;\r\n\r\n    if (isChrome || isOpera) {\r\n        verOffset = nAgt.indexOf('Chrome');\r\n        fullVersion = nAgt.substring(verOffset + 7);\r\n    }\r\n\r\n    // trim the fullVersion string at semicolon/space if present\r\n    if ((ix = fullVersion.indexOf(';')) !== -1) {\r\n        fullVersion = fullVersion.substring(0, ix);\r\n    }\r\n\r\n    if ((ix = fullVersion.indexOf(' ')) !== -1) {\r\n        fullVersion = fullVersion.substring(0, ix);\r\n    }\r\n\r\n    majorVersion = parseInt('' + fullVersion, 10);\r\n\r\n    if (isNaN(majorVersion)) {\r\n        fullVersion = '' + parseFloat(navigator.appVersion);\r\n        majorVersion = parseInt(navigator.appVersion, 10);\r\n    }\r\n\r\n    return majorVersion >= 49;\r\n}\n\r\n// ______________________\r\n// MediaStreamRecorder.js\r\n\r\n/**\r\n * MediaStreamRecorder is an abstraction layer for {@link https://w3c.github.io/mediacapture-record/MediaRecorder.html|MediaRecorder API}. It is used by {@link RecordRTC} to record MediaStream(s) in both Chrome and Firefox.\r\n * @summary Runs top over {@link https://w3c.github.io/mediacapture-record/MediaRecorder.html|MediaRecorder API}.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://github.com/muaz-khan|Muaz Khan}\r\n * @typedef MediaStreamRecorder\r\n * @class\r\n * @example\r\n * var config = {\r\n *     mimeType: 'video/webm', // vp8, vp9, h264, mkv, opus/vorbis\r\n *     audioBitsPerSecond : 256 * 8 * 1024,\r\n *     videoBitsPerSecond : 256 * 8 * 1024,\r\n *     bitsPerSecond: 256 * 8 * 1024,  // if this is provided, skip above two\r\n *     checkForInactiveTracks: true,\r\n *     timeSlice: 1000, // concatenate intervals based blobs\r\n *     ondataavailable: function() {} // get intervals based blobs\r\n * }\r\n * var recorder = new MediaStreamRecorder(mediaStream, config);\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n *\r\n *     // or\r\n *     var blob = recorder.blob;\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {disableLogs:true, initCallback: function, mimeType: \"video/webm\", timeSlice: 1000}\r\n * @throws Will throw an error if first argument \"MediaStream\" is missing. Also throws error if \"MediaRecorder API\" are not supported by the browser.\r\n */\r\n\r\nfunction MediaStreamRecorder(mediaStream, config) {\r\n    var self = this;\r\n\r\n    if (typeof mediaStream === 'undefined') {\r\n        throw 'First argument \"MediaStream\" is required.';\r\n    }\r\n\r\n    if (typeof MediaRecorder === 'undefined') {\r\n        throw 'Your browser does not support the Media Recorder API. Please try other modules e.g. WhammyRecorder or StereoAudioRecorder.';\r\n    }\r\n\r\n    config = config || {\r\n        // bitsPerSecond: 256 * 8 * 1024,\r\n        mimeType: 'video/webm'\r\n    };\r\n\r\n    if (config.type === 'audio') {\r\n        if (getTracks(mediaStream, 'video').length && getTracks(mediaStream, 'audio').length) {\r\n            var stream;\r\n            if (!!navigator.mozGetUserMedia) {\r\n                stream = new MediaStream();\r\n                stream.addTrack(getTracks(mediaStream, 'audio')[0]);\r\n            } else {\r\n                // webkitMediaStream\r\n                stream = new MediaStream(getTracks(mediaStream, 'audio'));\r\n            }\r\n            mediaStream = stream;\r\n        }\r\n\r\n        if (!config.mimeType || config.mimeType.toString().toLowerCase().indexOf('audio') === -1) {\r\n            config.mimeType = isChrome ? 'audio/webm' : 'audio/ogg';\r\n        }\r\n\r\n        if (config.mimeType && config.mimeType.toString().toLowerCase() !== 'audio/ogg' && !!navigator.mozGetUserMedia) {\r\n            // forcing better codecs on Firefox (via #166)\r\n            config.mimeType = 'audio/ogg';\r\n        }\r\n    }\r\n\r\n    var arrayOfBlobs = [];\r\n\r\n    /**\r\n     * This method returns array of blobs. Use only with \"timeSlice\". Its useful to preview recording anytime, without using the \"stop\" method.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * var arrayOfBlobs = recorder.getArrayOfBlobs();\r\n     * @returns {Array} Returns array of recorded blobs.\r\n     */\r\n    this.getArrayOfBlobs = function() {\r\n        return arrayOfBlobs;\r\n    };\r\n\r\n    /**\r\n     * This method records MediaStream.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        // set defaults\r\n        self.blob = null;\r\n        self.clearRecordedData();\r\n        self.timestamps = [];\r\n        allStates = [];\r\n        arrayOfBlobs = [];\r\n\r\n        var recorderHints = config;\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Passing following config over MediaRecorder API.', recorderHints);\r\n        }\r\n\r\n        if (mediaRecorder) {\r\n            // mandatory to make sure Firefox doesn't fails to record streams 3-4 times without reloading the page.\r\n            mediaRecorder = null;\r\n        }\r\n\r\n        if (isChrome && !isMediaRecorderCompatible()) {\r\n            // to support video-only recording on stable\r\n            recorderHints = 'video/vp8';\r\n        }\r\n\r\n        if (typeof MediaRecorder.isTypeSupported === 'function' && recorderHints.mimeType) {\r\n            if (!MediaRecorder.isTypeSupported(recorderHints.mimeType)) {\r\n                if (!config.disableLogs) {\r\n                    console.warn('MediaRecorder API seems unable to record mimeType:', recorderHints.mimeType);\r\n                }\r\n\r\n                recorderHints.mimeType = config.type === 'audio' ? 'audio/webm' : 'video/webm';\r\n            }\r\n        }\r\n\r\n        // using MediaRecorder API here\r\n        try {\r\n            mediaRecorder = new MediaRecorder(mediaStream, recorderHints);\r\n\r\n            // reset\r\n            config.mimeType = recorderHints.mimeType;\r\n        } catch (e) {\r\n            // chrome-based fallback\r\n            mediaRecorder = new MediaRecorder(mediaStream);\r\n        }\r\n\r\n        // old hack?\r\n        if (recorderHints.mimeType && !MediaRecorder.isTypeSupported && 'canRecordMimeType' in mediaRecorder && mediaRecorder.canRecordMimeType(recorderHints.mimeType) === false) {\r\n            if (!config.disableLogs) {\r\n                console.warn('MediaRecorder API seems unable to record mimeType:', recorderHints.mimeType);\r\n            }\r\n        }\r\n\r\n        // Dispatching OnDataAvailable Handler\r\n        mediaRecorder.ondataavailable = function(e) {\r\n            if (e.data) {\r\n                allStates.push('ondataavailable: ' + bytesToSize(e.data.size));\r\n            }\r\n\r\n            if (typeof config.timeSlice === 'number') {\r\n                if (e.data && e.data.size) {\r\n                    arrayOfBlobs.push(e.data);\r\n                    updateTimeStamp();\r\n\r\n                    if (typeof config.ondataavailable === 'function') {\r\n                        // intervals based blobs\r\n                        var blob = config.getNativeBlob ? e.data : new Blob([e.data], {\r\n                            type: getMimeType(recorderHints)\r\n                        });\r\n                        config.ondataavailable(blob);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (!e.data || !e.data.size || e.data.size < 100 || self.blob) {\r\n                // make sure that stopRecording always getting fired\r\n                // even if there is invalid data\r\n                if (self.recordingCallback) {\r\n                    self.recordingCallback(new Blob([], {\r\n                        type: getMimeType(recorderHints)\r\n                    }));\r\n                    self.recordingCallback = null;\r\n                }\r\n                return;\r\n            }\r\n\r\n            self.blob = config.getNativeBlob ? e.data : new Blob([e.data], {\r\n                type: getMimeType(recorderHints)\r\n            });\r\n\r\n            if (self.recordingCallback) {\r\n                self.recordingCallback(self.blob);\r\n                self.recordingCallback = null;\r\n            }\r\n        };\r\n\r\n        mediaRecorder.onstart = function() {\r\n            allStates.push('started');\r\n        };\r\n\r\n        mediaRecorder.onpause = function() {\r\n            allStates.push('paused');\r\n        };\r\n\r\n        mediaRecorder.onresume = function() {\r\n            allStates.push('resumed');\r\n        };\r\n\r\n        mediaRecorder.onstop = function() {\r\n            allStates.push('stopped');\r\n        };\r\n\r\n        mediaRecorder.onerror = function(error) {\r\n            if (!error) {\r\n                return;\r\n            }\r\n\r\n            if (!error.name) {\r\n                error.name = 'UnknownError';\r\n            }\r\n\r\n            allStates.push('error: ' + error);\r\n\r\n            if (!config.disableLogs) {\r\n                // via: https://w3c.github.io/mediacapture-record/MediaRecorder.html#exception-summary\r\n                if (error.name.toString().toLowerCase().indexOf('invalidstate') !== -1) {\r\n                    console.error('The MediaRecorder is not in a state in which the proposed operation is allowed to be executed.', error);\r\n                } else if (error.name.toString().toLowerCase().indexOf('notsupported') !== -1) {\r\n                    console.error('MIME type (', recorderHints.mimeType, ') is not supported.', error);\r\n                } else if (error.name.toString().toLowerCase().indexOf('security') !== -1) {\r\n                    console.error('MediaRecorder security error', error);\r\n                }\r\n\r\n                // older code below\r\n                else if (error.name === 'OutOfMemory') {\r\n                    console.error('The UA has exhaused the available memory. User agents SHOULD provide as much additional information as possible in the message attribute.', error);\r\n                } else if (error.name === 'IllegalStreamModification') {\r\n                    console.error('A modification to the stream has occurred that makes it impossible to continue recording. An example would be the addition of a Track while recording is occurring. User agents SHOULD provide as much additional information as possible in the message attribute.', error);\r\n                } else if (error.name === 'OtherRecordingError') {\r\n                    console.error('Used for an fatal error other than those listed above. User agents SHOULD provide as much additional information as possible in the message attribute.', error);\r\n                } else if (error.name === 'GenericError') {\r\n                    console.error('The UA cannot provide the codec or recording option that has been requested.', error);\r\n                } else {\r\n                    console.error('MediaRecorder Error', error);\r\n                }\r\n            }\r\n\r\n            (function(looper) {\r\n                if (!self.manuallyStopped && mediaRecorder && mediaRecorder.state === 'inactive') {\r\n                    delete config.timeslice;\r\n\r\n                    // 10 minutes, enough?\r\n                    mediaRecorder.start(10 * 60 * 1000);\r\n                    return;\r\n                }\r\n\r\n                setTimeout(looper, 1000);\r\n            })();\r\n\r\n            if (mediaRecorder.state !== 'inactive' && mediaRecorder.state !== 'stopped') {\r\n                mediaRecorder.stop();\r\n            }\r\n        };\r\n\r\n        if (typeof config.timeSlice === 'number') {\r\n            updateTimeStamp();\r\n            mediaRecorder.start(config.timeSlice);\r\n        } else {\r\n            // default is 60 minutes; enough?\r\n            // use config => {timeSlice: 1000} otherwise\r\n\r\n            mediaRecorder.start(3.6e+6);\r\n        }\r\n\r\n        if (config.initCallback) {\r\n            config.initCallback(); // old code\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @property {Array} timestamps - Array of time stamps\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * console.log(recorder.timestamps);\r\n     */\r\n    this.timestamps = [];\r\n\r\n    function updateTimeStamp() {\r\n        self.timestamps.push(new Date().getTime());\r\n\r\n        if (typeof config.onTimeStamp === 'function') {\r\n            config.onTimeStamp(self.timestamps[self.timestamps.length - 1], self.timestamps);\r\n        }\r\n    }\r\n\r\n    function getMimeType(secondObject) {\r\n        if (mediaRecorder && mediaRecorder.mimeType) {\r\n            return mediaRecorder.mimeType;\r\n        }\r\n\r\n        return secondObject.mimeType || 'video/webm';\r\n    }\r\n\r\n    /**\r\n     * This method stops recording MediaStream.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        callback = callback || function() {};\r\n\r\n        self.manuallyStopped = true; // used inside the mediaRecorder.onerror\r\n\r\n        if (!mediaRecorder) {\r\n            return;\r\n        }\r\n\r\n        this.recordingCallback = callback;\r\n\r\n        if (mediaRecorder.state === 'recording') {\r\n            mediaRecorder.stop();\r\n        }\r\n\r\n        if (typeof config.timeSlice === 'number') {\r\n            setTimeout(function() {\r\n                self.blob = new Blob(arrayOfBlobs, {\r\n                    type: getMimeType(config)\r\n                });\r\n\r\n                self.recordingCallback(self.blob);\r\n            }, 100);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        if (!mediaRecorder) {\r\n            return;\r\n        }\r\n\r\n        if (mediaRecorder.state === 'recording') {\r\n            mediaRecorder.pause();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        if (!mediaRecorder) {\r\n            return;\r\n        }\r\n\r\n        if (mediaRecorder.state === 'paused') {\r\n            mediaRecorder.resume();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        if (mediaRecorder && mediaRecorder.state === 'recording') {\r\n            self.stop(clearRecordedDataCB);\r\n        }\r\n\r\n        clearRecordedDataCB();\r\n    };\r\n\r\n    function clearRecordedDataCB() {\r\n        arrayOfBlobs = [];\r\n        mediaRecorder = null;\r\n        self.timestamps = [];\r\n    }\r\n\r\n    // Reference to \"MediaRecorder\" object\r\n    var mediaRecorder;\r\n\r\n    /**\r\n     * Access to native MediaRecorder API\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @instance\r\n     * @example\r\n     * var internal = recorder.getInternalRecorder();\r\n     * internal.ondataavailable = function() {}; // override\r\n     * internal.stream, internal.onpause, internal.onstop, etc.\r\n     * @returns {Object} Returns internal recording object.\r\n     */\r\n    this.getInternalRecorder = function() {\r\n        return mediaRecorder;\r\n    };\r\n\r\n    function isMediaStreamActive() {\r\n        if ('active' in mediaStream) {\r\n            if (!mediaStream.active) {\r\n                return false;\r\n            }\r\n        } else if ('ended' in mediaStream) { // old hack\r\n            if (mediaStream.ended) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @property {Blob} blob - Recorded data as \"Blob\" object.\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.stop(function() {\r\n     *     var blob = recorder.blob;\r\n     * });\r\n     */\r\n    this.blob = null;\r\n\r\n\r\n    /**\r\n     * Get MediaRecorder readonly state.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * var state = recorder.getState();\r\n     * @returns {String} Returns recording state.\r\n     */\r\n    this.getState = function() {\r\n        if (!mediaRecorder) {\r\n            return 'inactive';\r\n        }\r\n\r\n        return mediaRecorder.state || 'inactive';\r\n    };\r\n\r\n    // list of all recording states\r\n    var allStates = [];\r\n\r\n    /**\r\n     * Get MediaRecorder all recording states.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * var state = recorder.getAllStates();\r\n     * @returns {Array} Returns all recording states\r\n     */\r\n    this.getAllStates = function() {\r\n        return allStates;\r\n    };\r\n\r\n    // if any Track within the MediaStream is muted or not enabled at any time, \r\n    // the browser will only record black frames \r\n    // or silence since that is the content produced by the Track\r\n    // so we need to stopRecording as soon as any single track ends.\r\n    if (typeof config.checkForInactiveTracks === 'undefined') {\r\n        config.checkForInactiveTracks = false; // disable to minimize CPU usage\r\n    }\r\n\r\n    var self = this;\r\n\r\n    // this method checks if media stream is stopped\r\n    // or if any track is ended.\r\n    (function looper() {\r\n        if (!mediaRecorder || config.checkForInactiveTracks === false) {\r\n            return;\r\n        }\r\n\r\n        if (isMediaStreamActive() === false) {\r\n            if (!config.disableLogs) {\r\n                console.log('MediaStream seems stopped.');\r\n            }\r\n            self.stop();\r\n            return;\r\n        }\r\n\r\n        setTimeout(looper, 1000); // check every second\r\n    })();\r\n\r\n    // for debugging\r\n    this.name = 'MediaStreamRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.MediaStreamRecorder = MediaStreamRecorder;\r\n}\r\n\r\n// source code from: http://typedarray.org/wp-content/projects/WebAudioRecorder/script.js\r\n// https://github.com/mattdiamond/Recorderjs#license-mit\r\n// ______________________\r\n// StereoAudioRecorder.js\r\n\r\n/**\r\n * StereoAudioRecorder is a standalone class used by {@link RecordRTC} to bring \"stereo\" audio-recording in chrome.\r\n * @summary JavaScript standalone object for stereo audio recording.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef StereoAudioRecorder\r\n * @class\r\n * @example\r\n * var recorder = new StereoAudioRecorder(MediaStream, {\r\n *     sampleRate: 44100,\r\n *     bufferSize: 4096\r\n * });\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {sampleRate: 44100, bufferSize: 4096, numberOfAudioChannels: 1, etc.}\r\n */\r\n\r\nfunction StereoAudioRecorder(mediaStream, config) {\r\n    if (!getTracks(mediaStream, 'audio').length) {\r\n        throw 'Your stream has no audio tracks.';\r\n    }\r\n\r\n    config = config || {};\r\n\r\n    var self = this;\r\n\r\n    // variables\r\n    var leftchannel = [];\r\n    var rightchannel = [];\r\n    var recording = false;\r\n    var recordingLength = 0;\r\n    var jsAudioNode;\r\n\r\n    var numberOfAudioChannels = 2;\r\n\r\n    /**\r\n     * Set sample rates such as 8K or 16K. Reference: http://stackoverflow.com/a/28977136/552182\r\n     * @property {number} desiredSampRate - Desired Bits per sample * 1000\r\n     * @memberof StereoAudioRecorder\r\n     * @instance\r\n     * @example\r\n     * var recorder = StereoAudioRecorder(mediaStream, {\r\n     *   desiredSampRate: 16 * 1000 // bits-per-sample * 1000\r\n     * });\r\n     */\r\n    var desiredSampRate = config.desiredSampRate;\r\n\r\n    // backward compatibility\r\n    if (config.leftChannel === true) {\r\n        numberOfAudioChannels = 1;\r\n    }\r\n\r\n    if (config.numberOfAudioChannels === 1) {\r\n        numberOfAudioChannels = 1;\r\n    }\r\n\r\n    if (!numberOfAudioChannels || numberOfAudioChannels < 1) {\r\n        numberOfAudioChannels = 2;\r\n    }\r\n\r\n    if (!config.disableLogs) {\r\n        console.log('StereoAudioRecorder is set to record number of channels: ' + numberOfAudioChannels);\r\n    }\r\n\r\n    // if any Track within the MediaStream is muted or not enabled at any time, \r\n    // the browser will only record black frames \r\n    // or silence since that is the content produced by the Track\r\n    // so we need to stopRecording as soon as any single track ends.\r\n    if (typeof config.checkForInactiveTracks === 'undefined') {\r\n        config.checkForInactiveTracks = true;\r\n    }\r\n\r\n    function isMediaStreamActive() {\r\n        if (config.checkForInactiveTracks === false) {\r\n            // always return \"true\"\r\n            return true;\r\n        }\r\n\r\n        if ('active' in mediaStream) {\r\n            if (!mediaStream.active) {\r\n                return false;\r\n            }\r\n        } else if ('ended' in mediaStream) { // old hack\r\n            if (mediaStream.ended) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * This method records MediaStream.\r\n     * @method\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        if (isMediaStreamActive() === false) {\r\n            throw 'Please make sure MediaStream is active.';\r\n        }\r\n\r\n        resetVariables();\r\n\r\n        isAudioProcessStarted = isPaused = false;\r\n        recording = true;\r\n\r\n        if (typeof config.timeSlice !== 'undefined') {\r\n            looper();\r\n        }\r\n    };\r\n\r\n    function mergeLeftRightBuffers(config, callback) {\r\n        function mergeAudioBuffers(config, cb) {\r\n            var numberOfAudioChannels = config.numberOfAudioChannels;\r\n\r\n            // todo: \"slice(0)\" --- is it causes loop? Should be removed?\r\n            var leftBuffers = config.leftBuffers.slice(0);\r\n            var rightBuffers = config.rightBuffers.slice(0);\r\n            var sampleRate = config.sampleRate;\r\n            var internalInterleavedLength = config.internalInterleavedLength;\r\n            var desiredSampRate = config.desiredSampRate;\r\n\r\n            if (numberOfAudioChannels === 2) {\r\n                leftBuffers = mergeBuffers(leftBuffers, internalInterleavedLength);\r\n                rightBuffers = mergeBuffers(rightBuffers, internalInterleavedLength);\r\n\r\n                if (desiredSampRate) {\r\n                    leftBuffers = interpolateArray(leftBuffers, desiredSampRate, sampleRate);\r\n                    rightBuffers = interpolateArray(rightBuffers, desiredSampRate, sampleRate);\r\n                }\r\n            }\r\n\r\n            if (numberOfAudioChannels === 1) {\r\n                leftBuffers = mergeBuffers(leftBuffers, internalInterleavedLength);\r\n\r\n                if (desiredSampRate) {\r\n                    leftBuffers = interpolateArray(leftBuffers, desiredSampRate, sampleRate);\r\n                }\r\n            }\r\n\r\n            // set sample rate as desired sample rate\r\n            if (desiredSampRate) {\r\n                sampleRate = desiredSampRate;\r\n            }\r\n\r\n            // for changing the sampling rate, reference:\r\n            // http://stackoverflow.com/a/28977136/552182\r\n            function interpolateArray(data, newSampleRate, oldSampleRate) {\r\n                var fitCount = Math.round(data.length * (newSampleRate / oldSampleRate));\r\n                var newData = [];\r\n                var springFactor = Number((data.length - 1) / (fitCount - 1));\r\n                newData[0] = data[0];\r\n                for (var i = 1; i < fitCount - 1; i++) {\r\n                    var tmp = i * springFactor;\r\n                    var before = Number(Math.floor(tmp)).toFixed();\r\n                    var after = Number(Math.ceil(tmp)).toFixed();\r\n                    var atPoint = tmp - before;\r\n                    newData[i] = linearInterpolate(data[before], data[after], atPoint);\r\n                }\r\n                newData[fitCount - 1] = data[data.length - 1];\r\n                return newData;\r\n            }\r\n\r\n            function linearInterpolate(before, after, atPoint) {\r\n                return before + (after - before) * atPoint;\r\n            }\r\n\r\n            function mergeBuffers(channelBuffer, rLength) {\r\n                var result = new Float64Array(rLength);\r\n                var offset = 0;\r\n                var lng = channelBuffer.length;\r\n\r\n                for (var i = 0; i < lng; i++) {\r\n                    var buffer = channelBuffer[i];\r\n                    result.set(buffer, offset);\r\n                    offset += buffer.length;\r\n                }\r\n\r\n                return result;\r\n            }\r\n\r\n            function interleave(leftChannel, rightChannel) {\r\n                var length = leftChannel.length + rightChannel.length;\r\n\r\n                var result = new Float64Array(length);\r\n\r\n                var inputIndex = 0;\r\n\r\n                for (var index = 0; index < length;) {\r\n                    result[index++] = leftChannel[inputIndex];\r\n                    result[index++] = rightChannel[inputIndex];\r\n                    inputIndex++;\r\n                }\r\n                return result;\r\n            }\r\n\r\n            function writeUTFBytes(view, offset, string) {\r\n                var lng = string.length;\r\n                for (var i = 0; i < lng; i++) {\r\n                    view.setUint8(offset + i, string.charCodeAt(i));\r\n                }\r\n            }\r\n\r\n            // interleave both channels together\r\n            var interleaved;\r\n\r\n            if (numberOfAudioChannels === 2) {\r\n                interleaved = interleave(leftBuffers, rightBuffers);\r\n            }\r\n\r\n            if (numberOfAudioChannels === 1) {\r\n                interleaved = leftBuffers;\r\n            }\r\n\r\n            var interleavedLength = interleaved.length;\r\n\r\n            // create wav file\r\n            var resultingBufferLength = 44 + interleavedLength * 2;\r\n\r\n            var buffer = new ArrayBuffer(resultingBufferLength);\r\n\r\n            var view = new DataView(buffer);\r\n\r\n            // RIFF chunk descriptor/identifier \r\n            writeUTFBytes(view, 0, 'RIFF');\r\n\r\n            // RIFF chunk length\r\n            // changed \"44\" to \"36\" via #401\r\n            view.setUint32(4, 36 + interleavedLength * 2, true);\r\n\r\n            // RIFF type \r\n            writeUTFBytes(view, 8, 'WAVE');\r\n\r\n            // format chunk identifier \r\n            // FMT sub-chunk\r\n            writeUTFBytes(view, 12, 'fmt ');\r\n\r\n            // format chunk length \r\n            view.setUint32(16, 16, true);\r\n\r\n            // sample format (raw)\r\n            view.setUint16(20, 1, true);\r\n\r\n            // stereo (2 channels)\r\n            view.setUint16(22, numberOfAudioChannels, true);\r\n\r\n            // sample rate \r\n            view.setUint32(24, sampleRate, true);\r\n\r\n            // byte rate (sample rate * block align)\r\n            view.setUint32(28, sampleRate * numberOfAudioChannels * 2, true);\r\n\r\n            // block align (channel count * bytes per sample) \r\n            view.setUint16(32, numberOfAudioChannels * 2, true);\r\n\r\n            // bits per sample \r\n            view.setUint16(34, 16, true);\r\n\r\n            // data sub-chunk\r\n            // data chunk identifier \r\n            writeUTFBytes(view, 36, 'data');\r\n\r\n            // data chunk length \r\n            view.setUint32(40, interleavedLength * 2, true);\r\n\r\n            // write the PCM samples\r\n            var lng = interleavedLength;\r\n            var index = 44;\r\n            var volume = 1;\r\n            for (var i = 0; i < lng; i++) {\r\n                view.setInt16(index, interleaved[i] * (0x7FFF * volume), true);\r\n                index += 2;\r\n            }\r\n\r\n            if (cb) {\r\n                return cb({\r\n                    buffer: buffer,\r\n                    view: view\r\n                });\r\n            }\r\n\r\n            postMessage({\r\n                buffer: buffer,\r\n                view: view\r\n            });\r\n        }\r\n\r\n        if (config.noWorker) {\r\n            mergeAudioBuffers(config, function(data) {\r\n                callback(data.buffer, data.view);\r\n            });\r\n            return;\r\n        }\r\n\r\n\r\n        var webWorker = processInWebWorker(mergeAudioBuffers);\r\n\r\n        webWorker.onmessage = function(event) {\r\n            callback(event.data.buffer, event.data.view);\r\n\r\n            // release memory\r\n            URL.revokeObjectURL(webWorker.workerURL);\r\n\r\n            // kill webworker (or Chrome will kill your page after ~25 calls)\r\n            webWorker.terminate();\r\n        };\r\n\r\n        webWorker.postMessage(config);\r\n    }\r\n\r\n    function processInWebWorker(_function) {\r\n        var workerURL = URL.createObjectURL(new Blob([_function.toString(),\r\n            ';this.onmessage =  function (eee) {' + _function.name + '(eee.data);}'\r\n        ], {\r\n            type: 'application/javascript'\r\n        }));\r\n\r\n        var worker = new Worker(workerURL);\r\n        worker.workerURL = workerURL;\r\n        return worker;\r\n    }\r\n\r\n    /**\r\n     * This method stops recording MediaStream.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        callback = callback || function() {};\r\n\r\n        // stop recording\r\n        recording = false;\r\n\r\n        mergeLeftRightBuffers({\r\n            desiredSampRate: desiredSampRate,\r\n            sampleRate: sampleRate,\r\n            numberOfAudioChannels: numberOfAudioChannels,\r\n            internalInterleavedLength: recordingLength,\r\n            leftBuffers: leftchannel,\r\n            rightBuffers: numberOfAudioChannels === 1 ? [] : rightchannel,\r\n            noWorker: config.noWorker\r\n        }, function(buffer, view) {\r\n            /**\r\n             * @property {Blob} blob - The recorded blob object.\r\n             * @memberof StereoAudioRecorder\r\n             * @example\r\n             * recorder.stop(function(){\r\n             *     var blob = recorder.blob;\r\n             * });\r\n             */\r\n            self.blob = new Blob([view], {\r\n                type: 'audio/wav'\r\n            });\r\n\r\n            /**\r\n             * @property {ArrayBuffer} buffer - The recorded buffer object.\r\n             * @memberof StereoAudioRecorder\r\n             * @example\r\n             * recorder.stop(function(){\r\n             *     var buffer = recorder.buffer;\r\n             * });\r\n             */\r\n            self.buffer = new ArrayBuffer(view.buffer.byteLength);\r\n\r\n            /**\r\n             * @property {DataView} view - The recorded data-view object.\r\n             * @memberof StereoAudioRecorder\r\n             * @example\r\n             * recorder.stop(function(){\r\n             *     var view = recorder.view;\r\n             * });\r\n             */\r\n            self.view = view;\r\n\r\n            self.sampleRate = desiredSampRate || sampleRate;\r\n            self.bufferSize = bufferSize;\r\n\r\n            // recorded audio length\r\n            self.length = recordingLength;\r\n\r\n            isAudioProcessStarted = false;\r\n\r\n            if (callback) {\r\n                callback(self.blob);\r\n            }\r\n        });\r\n    };\r\n\r\n    if (typeof RecordRTC.Storage === 'undefined') {\r\n        RecordRTC.Storage = {\r\n            AudioContextConstructor: null,\r\n            AudioContext: window.AudioContext || window.webkitAudioContext\r\n        };\r\n    }\r\n\r\n    if (!RecordRTC.Storage.AudioContextConstructor || RecordRTC.Storage.AudioContextConstructor.state === 'closed') {\r\n        RecordRTC.Storage.AudioContextConstructor = new RecordRTC.Storage.AudioContext();\r\n    }\r\n\r\n    var context = RecordRTC.Storage.AudioContextConstructor;\r\n\r\n    // creates an audio node from the microphone incoming stream\r\n    var audioInput = context.createMediaStreamSource(mediaStream);\r\n\r\n    var legalBufferValues = [0, 256, 512, 1024, 2048, 4096, 8192, 16384];\r\n\r\n    /**\r\n     * From the spec: This value controls how frequently the audioprocess event is\r\n     * dispatched and how many sample-frames need to be processed each call.\r\n     * Lower values for buffer size will result in a lower (better) latency.\r\n     * Higher values will be necessary to avoid audio breakup and glitches\r\n     * The size of the buffer (in sample-frames) which needs to\r\n     * be processed each time onprocessaudio is called.\r\n     * Legal values are (256, 512, 1024, 2048, 4096, 8192, 16384).\r\n     * @property {number} bufferSize - Buffer-size for how frequently the audioprocess event is dispatched.\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder = new StereoAudioRecorder(mediaStream, {\r\n     *     bufferSize: 4096\r\n     * });\r\n     */\r\n\r\n    // \"0\" means, let chrome decide the most accurate buffer-size for current platform.\r\n    var bufferSize = typeof config.bufferSize === 'undefined' ? 4096 : config.bufferSize;\r\n\r\n    if (legalBufferValues.indexOf(bufferSize) === -1) {\r\n        if (!config.disableLogs) {\r\n            console.log('Legal values for buffer-size are ' + JSON.stringify(legalBufferValues, null, '\\t'));\r\n        }\r\n    }\r\n\r\n    if (context.createJavaScriptNode) {\r\n        jsAudioNode = context.createJavaScriptNode(bufferSize, numberOfAudioChannels, numberOfAudioChannels);\r\n    } else if (context.createScriptProcessor) {\r\n        jsAudioNode = context.createScriptProcessor(bufferSize, numberOfAudioChannels, numberOfAudioChannels);\r\n    } else {\r\n        throw 'WebAudio API has no support on this browser.';\r\n    }\r\n\r\n    // connect the stream to the script processor\r\n    audioInput.connect(jsAudioNode);\r\n\r\n    if (!config.bufferSize) {\r\n        bufferSize = jsAudioNode.bufferSize; // device buffer-size\r\n    }\r\n\r\n    /**\r\n     * The sample rate (in sample-frames per second) at which the\r\n     * AudioContext handles audio. It is assumed that all AudioNodes\r\n     * in the context run at this rate. In making this assumption,\r\n     * sample-rate converters or \"varispeed\" processors are not supported\r\n     * in real-time processing.\r\n     * The sampleRate parameter describes the sample-rate of the\r\n     * linear PCM audio data in the buffer in sample-frames per second.\r\n     * An implementation must support sample-rates in at least\r\n     * the range 22050 to 96000.\r\n     * @property {number} sampleRate - Buffer-size for how frequently the audioprocess event is dispatched.\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder = new StereoAudioRecorder(mediaStream, {\r\n     *     sampleRate: 44100\r\n     * });\r\n     */\r\n    var sampleRate = typeof config.sampleRate !== 'undefined' ? config.sampleRate : context.sampleRate || 44100;\r\n\r\n    if (sampleRate < 22050 || sampleRate > 96000) {\r\n        // Ref: http://stackoverflow.com/a/26303918/552182\r\n        if (!config.disableLogs) {\r\n            console.log('sample-rate must be under range 22050 and 96000.');\r\n        }\r\n    }\r\n\r\n    if (!config.disableLogs) {\r\n        if (config.desiredSampRate) {\r\n            console.log('Desired sample-rate: ' + config.desiredSampRate);\r\n        }\r\n    }\r\n\r\n    var isPaused = false;\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        isPaused = true;\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        if (isMediaStreamActive() === false) {\r\n            throw 'Please make sure MediaStream is active.';\r\n        }\r\n\r\n        if (!recording) {\r\n            if (!config.disableLogs) {\r\n                console.log('Seems recording has been restarted.');\r\n            }\r\n            this.record();\r\n            return;\r\n        }\r\n\r\n        isPaused = false;\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        config.checkForInactiveTracks = false;\r\n\r\n        if (recording) {\r\n            this.stop(clearRecordedDataCB);\r\n        }\r\n\r\n        clearRecordedDataCB();\r\n    };\r\n\r\n    function resetVariables() {\r\n        leftchannel = [];\r\n        rightchannel = [];\r\n        recordingLength = 0;\r\n        isAudioProcessStarted = false;\r\n        recording = false;\r\n        isPaused = false;\r\n        context = null;\r\n\r\n        self.leftchannel = leftchannel;\r\n        self.rightchannel = rightchannel;\r\n        self.numberOfAudioChannels = numberOfAudioChannels;\r\n        self.desiredSampRate = desiredSampRate;\r\n        self.sampleRate = sampleRate;\r\n        self.recordingLength = recordingLength;\r\n\r\n        intervalsBasedBuffers = {\r\n            left: [],\r\n            right: [],\r\n            recordingLength: 0\r\n        };\r\n    }\r\n\r\n    function clearRecordedDataCB() {\r\n        if (jsAudioNode) {\r\n            jsAudioNode.onaudioprocess = null;\r\n            jsAudioNode.disconnect();\r\n            jsAudioNode = null;\r\n        }\r\n\r\n        if (audioInput) {\r\n            audioInput.disconnect();\r\n            audioInput = null;\r\n        }\r\n\r\n        resetVariables();\r\n    }\r\n\r\n    // for debugging\r\n    this.name = 'StereoAudioRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    var isAudioProcessStarted = false;\r\n\r\n    function onAudioProcessDataAvailable(e) {\r\n        if (isPaused) {\r\n            return;\r\n        }\r\n\r\n        if (isMediaStreamActive() === false) {\r\n            if (!config.disableLogs) {\r\n                console.log('MediaStream seems stopped.');\r\n            }\r\n            jsAudioNode.disconnect();\r\n            recording = false;\r\n        }\r\n\r\n        if (!recording) {\r\n            if (audioInput) {\r\n                audioInput.disconnect();\r\n                audioInput = null;\r\n            }\r\n            return;\r\n        }\r\n\r\n        /**\r\n         * This method is called on \"onaudioprocess\" event's first invocation.\r\n         * @method {function} onAudioProcessStarted\r\n         * @memberof StereoAudioRecorder\r\n         * @example\r\n         * recorder.onAudioProcessStarted: function() { };\r\n         */\r\n        if (!isAudioProcessStarted) {\r\n            isAudioProcessStarted = true;\r\n            if (config.onAudioProcessStarted) {\r\n                config.onAudioProcessStarted();\r\n            }\r\n\r\n            if (config.initCallback) {\r\n                config.initCallback();\r\n            }\r\n        }\r\n\r\n        var left = e.inputBuffer.getChannelData(0);\r\n\r\n        // we clone the samples\r\n        var chLeft = new Float32Array(left);\r\n        leftchannel.push(chLeft);\r\n\r\n        if (numberOfAudioChannels === 2) {\r\n            var right = e.inputBuffer.getChannelData(1);\r\n            var chRight = new Float32Array(right);\r\n            rightchannel.push(chRight);\r\n        }\r\n\r\n        recordingLength += bufferSize;\r\n\r\n        // export raw PCM\r\n        self.recordingLength = recordingLength;\r\n\r\n        if (typeof config.timeSlice !== 'undefined') {\r\n            intervalsBasedBuffers.recordingLength += bufferSize;\r\n            intervalsBasedBuffers.left.push(chLeft);\r\n\r\n            if (numberOfAudioChannels === 2) {\r\n                intervalsBasedBuffers.right.push(chRight);\r\n            }\r\n        }\r\n    }\r\n\r\n    jsAudioNode.onaudioprocess = onAudioProcessDataAvailable;\r\n\r\n    // to prevent self audio to be connected with speakers\r\n    if (context.createMediaStreamDestination) {\r\n        jsAudioNode.connect(context.createMediaStreamDestination());\r\n    } else {\r\n        jsAudioNode.connect(context.destination);\r\n    }\r\n\r\n    // export raw PCM\r\n    this.leftchannel = leftchannel;\r\n    this.rightchannel = rightchannel;\r\n    this.numberOfAudioChannels = numberOfAudioChannels;\r\n    this.desiredSampRate = desiredSampRate;\r\n    this.sampleRate = sampleRate;\r\n    self.recordingLength = recordingLength;\r\n\r\n    // helper for intervals based blobs\r\n    var intervalsBasedBuffers = {\r\n        left: [],\r\n        right: [],\r\n        recordingLength: 0\r\n    };\r\n\r\n    // this looper is used to support intervals based blobs (via timeSlice+ondataavailable)\r\n    function looper() {\r\n        if (!recording || typeof config.ondataavailable !== 'function' || typeof config.timeSlice === 'undefined') {\r\n            return;\r\n        }\r\n\r\n        if (intervalsBasedBuffers.left.length) {\r\n            mergeLeftRightBuffers({\r\n                desiredSampRate: desiredSampRate,\r\n                sampleRate: sampleRate,\r\n                numberOfAudioChannels: numberOfAudioChannels,\r\n                internalInterleavedLength: intervalsBasedBuffers.recordingLength,\r\n                leftBuffers: intervalsBasedBuffers.left,\r\n                rightBuffers: numberOfAudioChannels === 1 ? [] : intervalsBasedBuffers.right\r\n            }, function(buffer, view) {\r\n                var blob = new Blob([view], {\r\n                    type: 'audio/wav'\r\n                });\r\n                config.ondataavailable(blob);\r\n\r\n                setTimeout(looper, config.timeSlice);\r\n            });\r\n\r\n            intervalsBasedBuffers = {\r\n                left: [],\r\n                right: [],\r\n                recordingLength: 0\r\n            };\r\n        } else {\r\n            setTimeout(looper, config.timeSlice);\r\n        }\r\n    }\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.StereoAudioRecorder = StereoAudioRecorder;\r\n}\r\n\r\n// _________________\r\n// CanvasRecorder.js\r\n\r\n/**\r\n * CanvasRecorder is a standalone class used by {@link RecordRTC} to bring HTML5-Canvas recording into video WebM. It uses HTML2Canvas library and runs top over {@link Whammy}.\r\n * @summary HTML2Canvas recording into video WebM.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef CanvasRecorder\r\n * @class\r\n * @example\r\n * var recorder = new CanvasRecorder(htmlElement, { disableLogs: true, useWhammyRecorder: true });\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {HTMLElement} htmlElement - querySelector/getElementById/getElementsByTagName[0]/etc.\r\n * @param {object} config - {disableLogs:true, initCallback: function}\r\n */\r\n\r\nfunction CanvasRecorder(htmlElement, config) {\r\n    if (typeof html2canvas === 'undefined') {\r\n        throw 'Please link: https://www.webrtc-experiment.com/screenshot.js';\r\n    }\r\n\r\n    config = config || {};\r\n    if (!config.frameInterval) {\r\n        config.frameInterval = 10;\r\n    }\r\n\r\n    // via DetectRTC.js\r\n    var isCanvasSupportsStreamCapturing = false;\r\n    ['captureStream', 'mozCaptureStream', 'webkitCaptureStream'].forEach(function(item) {\r\n        if (item in document.createElement('canvas')) {\r\n            isCanvasSupportsStreamCapturing = true;\r\n        }\r\n    });\r\n\r\n    var _isChrome = (!!window.webkitRTCPeerConnection || !!window.webkitGetUserMedia) && !!window.chrome;\r\n\r\n    var chromeVersion = 50;\r\n    var matchArray = navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\r\n    if (_isChrome && matchArray && matchArray[2]) {\r\n        chromeVersion = parseInt(matchArray[2], 10);\r\n    }\r\n\r\n    if (_isChrome && chromeVersion < 52) {\r\n        isCanvasSupportsStreamCapturing = false;\r\n    }\r\n\r\n    if (config.useWhammyRecorder) {\r\n        isCanvasSupportsStreamCapturing = false;\r\n    }\r\n\r\n    var globalCanvas, mediaStreamRecorder;\r\n\r\n    if (isCanvasSupportsStreamCapturing) {\r\n        if (!config.disableLogs) {\r\n            console.log('Your browser supports both MediRecorder API and canvas.captureStream!');\r\n        }\r\n\r\n        if (htmlElement instanceof HTMLCanvasElement) {\r\n            globalCanvas = htmlElement;\r\n        } else if (htmlElement instanceof CanvasRenderingContext2D) {\r\n            globalCanvas = htmlElement.canvas;\r\n        } else {\r\n            throw 'Please pass either HTMLCanvasElement or CanvasRenderingContext2D.';\r\n        }\r\n    } else if (!!navigator.mozGetUserMedia) {\r\n        if (!config.disableLogs) {\r\n            console.error('Canvas recording is NOT supported in Firefox.');\r\n        }\r\n    }\r\n\r\n    var isRecording;\r\n\r\n    /**\r\n     * This method records Canvas.\r\n     * @method\r\n     * @memberof CanvasRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        isRecording = true;\r\n\r\n        if (isCanvasSupportsStreamCapturing && !config.useWhammyRecorder) {\r\n            // CanvasCaptureMediaStream\r\n            var canvasMediaStream;\r\n            if ('captureStream' in globalCanvas) {\r\n                canvasMediaStream = globalCanvas.captureStream(25); // 25 FPS\r\n            } else if ('mozCaptureStream' in globalCanvas) {\r\n                canvasMediaStream = globalCanvas.mozCaptureStream(25);\r\n            } else if ('webkitCaptureStream' in globalCanvas) {\r\n                canvasMediaStream = globalCanvas.webkitCaptureStream(25);\r\n            }\r\n\r\n            try {\r\n                var mdStream = new MediaStream();\r\n                mdStream.addTrack(getTracks(canvasMediaStream, 'video')[0]);\r\n                canvasMediaStream = mdStream;\r\n            } catch (e) {}\r\n\r\n            if (!canvasMediaStream) {\r\n                throw 'captureStream API are NOT available.';\r\n            }\r\n\r\n            // Note: Jan 18, 2016 status is that, \r\n            // Firefox MediaRecorder API can't record CanvasCaptureMediaStream object.\r\n            mediaStreamRecorder = new MediaStreamRecorder(canvasMediaStream, {\r\n                mimeType: config.mimeType || 'video/webm'\r\n            });\r\n            mediaStreamRecorder.record();\r\n        } else {\r\n            whammy.frames = [];\r\n            lastTime = new Date().getTime();\r\n            drawCanvasFrame();\r\n        }\r\n\r\n        if (config.initCallback) {\r\n            config.initCallback();\r\n        }\r\n    };\r\n\r\n    this.getWebPImages = function(callback) {\r\n        if (htmlElement.nodeName.toLowerCase() !== 'canvas') {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        var framesLength = whammy.frames.length;\r\n        whammy.frames.forEach(function(frame, idx) {\r\n            var framesRemaining = framesLength - idx;\r\n            if (!config.disableLogs) {\r\n                console.log(framesRemaining + '/' + framesLength + ' frames remaining');\r\n            }\r\n\r\n            if (config.onEncodingCallback) {\r\n                config.onEncodingCallback(framesRemaining, framesLength);\r\n            }\r\n\r\n            var webp = frame.image.toDataURL('image/webp', 1);\r\n            whammy.frames[idx].image = webp;\r\n        });\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Generating WebM');\r\n        }\r\n\r\n        callback();\r\n    };\r\n\r\n    /**\r\n     * This method stops recording Canvas.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof CanvasRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        isRecording = false;\r\n\r\n        var that = this;\r\n\r\n        if (isCanvasSupportsStreamCapturing && mediaStreamRecorder) {\r\n            mediaStreamRecorder.stop(callback);\r\n            return;\r\n        }\r\n\r\n        this.getWebPImages(function() {\r\n            /**\r\n             * @property {Blob} blob - Recorded frames in video/webm blob.\r\n             * @memberof CanvasRecorder\r\n             * @example\r\n             * recorder.stop(function() {\r\n             *     var blob = recorder.blob;\r\n             * });\r\n             */\r\n            whammy.compile(function(blob) {\r\n                if (!config.disableLogs) {\r\n                    console.log('Recording finished!');\r\n                }\r\n\r\n                that.blob = blob;\r\n\r\n                if (that.blob.forEach) {\r\n                    that.blob = new Blob([], {\r\n                        type: 'video/webm'\r\n                    });\r\n                }\r\n\r\n                if (callback) {\r\n                    callback(that.blob);\r\n                }\r\n\r\n                whammy.frames = [];\r\n            });\r\n        });\r\n    };\r\n\r\n    var isPausedRecording = false;\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof CanvasRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        isPausedRecording = true;\r\n\r\n        if (mediaStreamRecorder instanceof MediaStreamRecorder) {\r\n            mediaStreamRecorder.pause();\r\n            return;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof CanvasRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        isPausedRecording = false;\r\n\r\n        if (mediaStreamRecorder instanceof MediaStreamRecorder) {\r\n            mediaStreamRecorder.resume();\r\n            return;\r\n        }\r\n\r\n        if (!isRecording) {\r\n            this.record();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof CanvasRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        if (isRecording) {\r\n            this.stop(clearRecordedDataCB);\r\n        }\r\n        clearRecordedDataCB();\r\n    };\r\n\r\n    function clearRecordedDataCB() {\r\n        whammy.frames = [];\r\n        isRecording = false;\r\n        isPausedRecording = false;\r\n    }\r\n\r\n    // for debugging\r\n    this.name = 'CanvasRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    function cloneCanvas() {\r\n        //create a new canvas\r\n        var newCanvas = document.createElement('canvas');\r\n        var context = newCanvas.getContext('2d');\r\n\r\n        //set dimensions\r\n        newCanvas.width = htmlElement.width;\r\n        newCanvas.height = htmlElement.height;\r\n\r\n        //apply the old canvas to the new one\r\n        context.drawImage(htmlElement, 0, 0);\r\n\r\n        //return the new canvas\r\n        return newCanvas;\r\n    }\r\n\r\n    function drawCanvasFrame() {\r\n        if (isPausedRecording) {\r\n            lastTime = new Date().getTime();\r\n            return setTimeout(drawCanvasFrame, 500);\r\n        }\r\n\r\n        if (htmlElement.nodeName.toLowerCase() === 'canvas') {\r\n            var duration = new Date().getTime() - lastTime;\r\n            // via #206, by Jack i.e. @Seymourr\r\n            lastTime = new Date().getTime();\r\n\r\n            whammy.frames.push({\r\n                image: cloneCanvas(),\r\n                duration: duration\r\n            });\r\n\r\n            if (isRecording) {\r\n                setTimeout(drawCanvasFrame, config.frameInterval);\r\n            }\r\n            return;\r\n        }\r\n\r\n        html2canvas(htmlElement, {\r\n            grabMouse: typeof config.showMousePointer === 'undefined' || config.showMousePointer,\r\n            onrendered: function(canvas) {\r\n                var duration = new Date().getTime() - lastTime;\r\n                if (!duration) {\r\n                    return setTimeout(drawCanvasFrame, config.frameInterval);\r\n                }\r\n\r\n                // via #206, by Jack i.e. @Seymourr\r\n                lastTime = new Date().getTime();\r\n\r\n                whammy.frames.push({\r\n                    image: canvas.toDataURL('image/webp', 1),\r\n                    duration: duration\r\n                });\r\n\r\n                if (isRecording) {\r\n                    setTimeout(drawCanvasFrame, config.frameInterval);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    var lastTime = new Date().getTime();\r\n\r\n    var whammy = new Whammy.Video(100);\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.CanvasRecorder = CanvasRecorder;\r\n}\n\r\n// _________________\r\n// WhammyRecorder.js\r\n\r\n/**\r\n * WhammyRecorder is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It runs top over {@link Whammy}.\r\n * @summary Video recording feature in Chrome.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef WhammyRecorder\r\n * @class\r\n * @example\r\n * var recorder = new WhammyRecorder(mediaStream);\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {disableLogs: true, initCallback: function, video: HTMLVideoElement, etc.}\r\n */\r\n\r\nfunction WhammyRecorder(mediaStream, config) {\r\n\r\n    config = config || {};\r\n\r\n    if (!config.frameInterval) {\r\n        config.frameInterval = 10;\r\n    }\r\n\r\n    if (!config.disableLogs) {\r\n        console.log('Using frames-interval:', config.frameInterval);\r\n    }\r\n\r\n    /**\r\n     * This method records video.\r\n     * @method\r\n     * @memberof WhammyRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        if (!config.width) {\r\n            config.width = 320;\r\n        }\r\n\r\n        if (!config.height) {\r\n            config.height = 240;\r\n        }\r\n\r\n        if (!config.video) {\r\n            config.video = {\r\n                width: config.width,\r\n                height: config.height\r\n            };\r\n        }\r\n\r\n        if (!config.canvas) {\r\n            config.canvas = {\r\n                width: config.width,\r\n                height: config.height\r\n            };\r\n        }\r\n\r\n        canvas.width = config.canvas.width || 320;\r\n        canvas.height = config.canvas.height || 240;\r\n\r\n        context = canvas.getContext('2d');\r\n\r\n        // setting defaults\r\n        if (config.video && config.video instanceof HTMLVideoElement) {\r\n            video = config.video.cloneNode();\r\n\r\n            if (config.initCallback) {\r\n                config.initCallback();\r\n            }\r\n        } else {\r\n            video = document.createElement('video');\r\n\r\n            setSrcObject(mediaStream, video);\r\n\r\n            video.onloadedmetadata = function() { // \"onloadedmetadata\" may NOT work in FF?\r\n                if (config.initCallback) {\r\n                    config.initCallback();\r\n                }\r\n            };\r\n\r\n            video.width = config.video.width;\r\n            video.height = config.video.height;\r\n        }\r\n\r\n        video.muted = true;\r\n        video.play();\r\n\r\n        lastTime = new Date().getTime();\r\n        whammy = new Whammy.Video();\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('canvas resolutions', canvas.width, '*', canvas.height);\r\n            console.log('video width/height', video.width || canvas.width, '*', video.height || canvas.height);\r\n        }\r\n\r\n        drawFrames(config.frameInterval);\r\n    };\r\n\r\n    /**\r\n     * Draw and push frames to Whammy\r\n     * @param {integer} frameInterval - set minimum interval (in milliseconds) between each time we push a frame to Whammy\r\n     */\r\n    function drawFrames(frameInterval) {\r\n        frameInterval = typeof frameInterval !== 'undefined' ? frameInterval : 10;\r\n\r\n        var duration = new Date().getTime() - lastTime;\r\n        if (!duration) {\r\n            return setTimeout(drawFrames, frameInterval, frameInterval);\r\n        }\r\n\r\n        if (isPausedRecording) {\r\n            lastTime = new Date().getTime();\r\n            return setTimeout(drawFrames, 100);\r\n        }\r\n\r\n        // via #206, by Jack i.e. @Seymourr\r\n        lastTime = new Date().getTime();\r\n\r\n        if (video.paused) {\r\n            // via: https://github.com/muaz-khan/WebRTC-Experiment/pull/316\r\n            // Tweak for Android Chrome\r\n            video.play();\r\n        }\r\n\r\n        context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n        whammy.frames.push({\r\n            duration: duration,\r\n            image: canvas.toDataURL('image/webp')\r\n        });\r\n\r\n        if (!isStopDrawing) {\r\n            setTimeout(drawFrames, frameInterval, frameInterval);\r\n        }\r\n    }\r\n\r\n    function asyncLoop(o) {\r\n        var i = -1,\r\n            length = o.length;\r\n\r\n        (function loop() {\r\n            i++;\r\n            if (i === length) {\r\n                o.callback();\r\n                return;\r\n            }\r\n\r\n            // \"setTimeout\" added by Jim McLeod\r\n            setTimeout(function() {\r\n                o.functionToLoop(loop, i);\r\n            }, 1);\r\n        })();\r\n    }\r\n\r\n\r\n    /**\r\n     * remove black frames from the beginning to the specified frame\r\n     * @param {Array} _frames - array of frames to be checked\r\n     * @param {number} _framesToCheck - number of frame until check will be executed (-1 - will drop all frames until frame not matched will be found)\r\n     * @param {number} _pixTolerance - 0 - very strict (only black pixel color) ; 1 - all\r\n     * @param {number} _frameTolerance - 0 - very strict (only black frame color) ; 1 - all\r\n     * @returns {Array} - array of frames\r\n     */\r\n    // pull#293 by @volodalexey\r\n    function dropBlackFrames(_frames, _framesToCheck, _pixTolerance, _frameTolerance, callback) {\r\n        var localCanvas = document.createElement('canvas');\r\n        localCanvas.width = canvas.width;\r\n        localCanvas.height = canvas.height;\r\n        var context2d = localCanvas.getContext('2d');\r\n        var resultFrames = [];\r\n\r\n        var checkUntilNotBlack = _framesToCheck === -1;\r\n        var endCheckFrame = (_framesToCheck && _framesToCheck > 0 && _framesToCheck <= _frames.length) ?\r\n            _framesToCheck : _frames.length;\r\n        var sampleColor = {\r\n            r: 0,\r\n            g: 0,\r\n            b: 0\r\n        };\r\n        var maxColorDifference = Math.sqrt(\r\n            Math.pow(255, 2) +\r\n            Math.pow(255, 2) +\r\n            Math.pow(255, 2)\r\n        );\r\n        var pixTolerance = _pixTolerance && _pixTolerance >= 0 && _pixTolerance <= 1 ? _pixTolerance : 0;\r\n        var frameTolerance = _frameTolerance && _frameTolerance >= 0 && _frameTolerance <= 1 ? _frameTolerance : 0;\r\n        var doNotCheckNext = false;\r\n\r\n        asyncLoop({\r\n            length: endCheckFrame,\r\n            functionToLoop: function(loop, f) {\r\n                var matchPixCount, endPixCheck, maxPixCount;\r\n\r\n                var finishImage = function() {\r\n                    if (!doNotCheckNext && maxPixCount - matchPixCount <= maxPixCount * frameTolerance) {\r\n                        // console.log('removed black frame : ' + f + ' ; frame duration ' + _frames[f].duration);\r\n                    } else {\r\n                        // console.log('frame is passed : ' + f);\r\n                        if (checkUntilNotBlack) {\r\n                            doNotCheckNext = true;\r\n                        }\r\n                        resultFrames.push(_frames[f]);\r\n                    }\r\n                    loop();\r\n                };\r\n\r\n                if (!doNotCheckNext) {\r\n                    var image = new Image();\r\n                    image.onload = function() {\r\n                        context2d.drawImage(image, 0, 0, canvas.width, canvas.height);\r\n                        var imageData = context2d.getImageData(0, 0, canvas.width, canvas.height);\r\n                        matchPixCount = 0;\r\n                        endPixCheck = imageData.data.length;\r\n                        maxPixCount = imageData.data.length / 4;\r\n\r\n                        for (var pix = 0; pix < endPixCheck; pix += 4) {\r\n                            var currentColor = {\r\n                                r: imageData.data[pix],\r\n                                g: imageData.data[pix + 1],\r\n                                b: imageData.data[pix + 2]\r\n                            };\r\n                            var colorDifference = Math.sqrt(\r\n                                Math.pow(currentColor.r - sampleColor.r, 2) +\r\n                                Math.pow(currentColor.g - sampleColor.g, 2) +\r\n                                Math.pow(currentColor.b - sampleColor.b, 2)\r\n                            );\r\n                            // difference in color it is difference in color vectors (r1,g1,b1) <=> (r2,g2,b2)\r\n                            if (colorDifference <= maxColorDifference * pixTolerance) {\r\n                                matchPixCount++;\r\n                            }\r\n                        }\r\n                        finishImage();\r\n                    };\r\n                    image.src = _frames[f].image;\r\n                } else {\r\n                    finishImage();\r\n                }\r\n            },\r\n            callback: function() {\r\n                resultFrames = resultFrames.concat(_frames.slice(endCheckFrame));\r\n\r\n                if (resultFrames.length <= 0) {\r\n                    // at least one last frame should be available for next manipulation\r\n                    // if total duration of all frames will be < 1000 than ffmpeg doesn't work well...\r\n                    resultFrames.push(_frames[_frames.length - 1]);\r\n                }\r\n                callback(resultFrames);\r\n            }\r\n        });\r\n    }\r\n\r\n    var isStopDrawing = false;\r\n\r\n    /**\r\n     * This method stops recording video.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof WhammyRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        callback = callback || function() {};\r\n\r\n        isStopDrawing = true;\r\n\r\n        var _this = this;\r\n        // analyse of all frames takes some time!\r\n        setTimeout(function() {\r\n            // e.g. dropBlackFrames(frames, 10, 1, 1) - will cut all 10 frames\r\n            // e.g. dropBlackFrames(frames, 10, 0.5, 0.5) - will analyse 10 frames\r\n            // e.g. dropBlackFrames(frames, 10) === dropBlackFrames(frames, 10, 0, 0) - will analyse 10 frames with strict black color\r\n            dropBlackFrames(whammy.frames, -1, null, null, function(frames) {\r\n                whammy.frames = frames;\r\n\r\n                // to display advertisement images!\r\n                if (config.advertisement && config.advertisement.length) {\r\n                    whammy.frames = config.advertisement.concat(whammy.frames);\r\n                }\r\n\r\n                /**\r\n                 * @property {Blob} blob - Recorded frames in video/webm blob.\r\n                 * @memberof WhammyRecorder\r\n                 * @example\r\n                 * recorder.stop(function() {\r\n                 *     var blob = recorder.blob;\r\n                 * });\r\n                 */\r\n                whammy.compile(function(blob) {\r\n                    _this.blob = blob;\r\n\r\n                    if (_this.blob.forEach) {\r\n                        _this.blob = new Blob([], {\r\n                            type: 'video/webm'\r\n                        });\r\n                    }\r\n\r\n                    if (callback) {\r\n                        callback(_this.blob);\r\n                    }\r\n                });\r\n            });\r\n        }, 10);\r\n    };\r\n\r\n    var isPausedRecording = false;\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof WhammyRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        isPausedRecording = true;\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof WhammyRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        isPausedRecording = false;\r\n\r\n        if (isStopDrawing) {\r\n            this.record();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof WhammyRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        if (!isStopDrawing) {\r\n            this.stop(clearRecordedDataCB);\r\n        }\r\n        clearRecordedDataCB();\r\n    };\r\n\r\n    function clearRecordedDataCB() {\r\n        whammy.frames = [];\r\n        isStopDrawing = true;\r\n        isPausedRecording = false;\r\n    }\r\n\r\n    // for debugging\r\n    this.name = 'WhammyRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    var canvas = document.createElement('canvas');\r\n    var context = canvas.getContext('2d');\r\n\r\n    var video;\r\n    var lastTime;\r\n    var whammy;\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.WhammyRecorder = WhammyRecorder;\r\n}\n\r\n// https://github.com/antimatter15/whammy/blob/master/LICENSE\r\n// _________\r\n// Whammy.js\r\n\r\n// todo: Firefox now supports webp for webm containers!\r\n// their MediaRecorder implementation works well!\r\n// should we provide an option to record via Whammy.js or MediaRecorder API is a better solution?\r\n\r\n/**\r\n * Whammy is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It is written by {@link https://github.com/antimatter15|antimatter15}\r\n * @summary A real time javascript webm encoder based on a canvas hack.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef Whammy\r\n * @class\r\n * @example\r\n * var recorder = new Whammy().Video(15);\r\n * recorder.add(context || canvas || dataURL);\r\n * var output = recorder.compile();\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\n\r\nvar Whammy = (function() {\r\n    // a more abstract-ish API\r\n\r\n    function WhammyVideo(duration) {\r\n        this.frames = [];\r\n        this.duration = duration || 1;\r\n        this.quality = 0.8;\r\n    }\r\n\r\n    /**\r\n     * Pass Canvas or Context or image/webp(string) to {@link Whammy} encoder.\r\n     * @method\r\n     * @memberof Whammy\r\n     * @example\r\n     * recorder = new Whammy().Video(0.8, 100);\r\n     * recorder.add(canvas || context || 'image/webp');\r\n     * @param {string} frame - Canvas || Context || image/webp\r\n     * @param {number} duration - Stick a duration (in milliseconds)\r\n     */\r\n    WhammyVideo.prototype.add = function(frame, duration) {\r\n        if ('canvas' in frame) { //CanvasRenderingContext2D\r\n            frame = frame.canvas;\r\n        }\r\n\r\n        if ('toDataURL' in frame) {\r\n            frame = frame.toDataURL('image/webp', this.quality);\r\n        }\r\n\r\n        if (!(/^data:image\\/webp;base64,/ig).test(frame)) {\r\n            throw 'Input must be formatted properly as a base64 encoded DataURI of type image/webp';\r\n        }\r\n        this.frames.push({\r\n            image: frame,\r\n            duration: duration || this.duration\r\n        });\r\n    };\r\n\r\n    function processInWebWorker(_function) {\r\n        var blob = URL.createObjectURL(new Blob([_function.toString(),\r\n            'this.onmessage =  function (eee) {' + _function.name + '(eee.data);}'\r\n        ], {\r\n            type: 'application/javascript'\r\n        }));\r\n\r\n        var worker = new Worker(blob);\r\n        URL.revokeObjectURL(blob);\r\n        return worker;\r\n    }\r\n\r\n    function whammyInWebWorker(frames) {\r\n        function ArrayToWebM(frames) {\r\n            var info = checkFrames(frames);\r\n            if (!info) {\r\n                return [];\r\n            }\r\n\r\n            var clusterMaxDuration = 30000;\r\n\r\n            var EBML = [{\r\n                'id': 0x1a45dfa3, // EBML\r\n                'data': [{\r\n                    'data': 1,\r\n                    'id': 0x4286 // EBMLVersion\r\n                }, {\r\n                    'data': 1,\r\n                    'id': 0x42f7 // EBMLReadVersion\r\n                }, {\r\n                    'data': 4,\r\n                    'id': 0x42f2 // EBMLMaxIDLength\r\n                }, {\r\n                    'data': 8,\r\n                    'id': 0x42f3 // EBMLMaxSizeLength\r\n                }, {\r\n                    'data': 'webm',\r\n                    'id': 0x4282 // DocType\r\n                }, {\r\n                    'data': 2,\r\n                    'id': 0x4287 // DocTypeVersion\r\n                }, {\r\n                    'data': 2,\r\n                    'id': 0x4285 // DocTypeReadVersion\r\n                }]\r\n            }, {\r\n                'id': 0x18538067, // Segment\r\n                'data': [{\r\n                    'id': 0x1549a966, // Info\r\n                    'data': [{\r\n                        'data': 1e6, //do things in millisecs (num of nanosecs for duration scale)\r\n                        'id': 0x2ad7b1 // TimecodeScale\r\n                    }, {\r\n                        'data': 'whammy',\r\n                        'id': 0x4d80 // MuxingApp\r\n                    }, {\r\n                        'data': 'whammy',\r\n                        'id': 0x5741 // WritingApp\r\n                    }, {\r\n                        'data': doubleToString(info.duration),\r\n                        'id': 0x4489 // Duration\r\n                    }]\r\n                }, {\r\n                    'id': 0x1654ae6b, // Tracks\r\n                    'data': [{\r\n                        'id': 0xae, // TrackEntry\r\n                        'data': [{\r\n                            'data': 1,\r\n                            'id': 0xd7 // TrackNumber\r\n                        }, {\r\n                            'data': 1,\r\n                            'id': 0x73c5 // TrackUID\r\n                        }, {\r\n                            'data': 0,\r\n                            'id': 0x9c // FlagLacing\r\n                        }, {\r\n                            'data': 'und',\r\n                            'id': 0x22b59c // Language\r\n                        }, {\r\n                            'data': 'V_VP8',\r\n                            'id': 0x86 // CodecID\r\n                        }, {\r\n                            'data': 'VP8',\r\n                            'id': 0x258688 // CodecName\r\n                        }, {\r\n                            'data': 1,\r\n                            'id': 0x83 // TrackType\r\n                        }, {\r\n                            'id': 0xe0, // Video\r\n                            'data': [{\r\n                                'data': info.width,\r\n                                'id': 0xb0 // PixelWidth\r\n                            }, {\r\n                                'data': info.height,\r\n                                'id': 0xba // PixelHeight\r\n                            }]\r\n                        }]\r\n                    }]\r\n                }]\r\n            }];\r\n\r\n            //Generate clusters (max duration)\r\n            var frameNumber = 0;\r\n            var clusterTimecode = 0;\r\n            while (frameNumber < frames.length) {\r\n\r\n                var clusterFrames = [];\r\n                var clusterDuration = 0;\r\n                do {\r\n                    clusterFrames.push(frames[frameNumber]);\r\n                    clusterDuration += frames[frameNumber].duration;\r\n                    frameNumber++;\r\n                } while (frameNumber < frames.length && clusterDuration < clusterMaxDuration);\r\n\r\n                var clusterCounter = 0;\r\n                var cluster = {\r\n                    'id': 0x1f43b675, // Cluster\r\n                    'data': getClusterData(clusterTimecode, clusterCounter, clusterFrames)\r\n                }; //Add cluster to segment\r\n                EBML[1].data.push(cluster);\r\n                clusterTimecode += clusterDuration;\r\n            }\r\n\r\n            return generateEBML(EBML);\r\n        }\r\n\r\n        function getClusterData(clusterTimecode, clusterCounter, clusterFrames) {\r\n            return [{\r\n                'data': clusterTimecode,\r\n                'id': 0xe7 // Timecode\r\n            }].concat(clusterFrames.map(function(webp) {\r\n                var block = makeSimpleBlock({\r\n                    discardable: 0,\r\n                    frame: webp.data.slice(4),\r\n                    invisible: 0,\r\n                    keyframe: 1,\r\n                    lacing: 0,\r\n                    trackNum: 1,\r\n                    timecode: Math.round(clusterCounter)\r\n                });\r\n                clusterCounter += webp.duration;\r\n                return {\r\n                    data: block,\r\n                    id: 0xa3\r\n                };\r\n            }));\r\n        }\r\n\r\n        // sums the lengths of all the frames and gets the duration\r\n\r\n        function checkFrames(frames) {\r\n            if (!frames[0]) {\r\n                postMessage({\r\n                    error: 'Something went wrong. Maybe WebP format is not supported in the current browser.'\r\n                });\r\n                return;\r\n            }\r\n\r\n            var width = frames[0].width,\r\n                height = frames[0].height,\r\n                duration = frames[0].duration;\r\n\r\n            for (var i = 1; i < frames.length; i++) {\r\n                duration += frames[i].duration;\r\n            }\r\n            return {\r\n                duration: duration,\r\n                width: width,\r\n                height: height\r\n            };\r\n        }\r\n\r\n        function numToBuffer(num) {\r\n            var parts = [];\r\n            while (num > 0) {\r\n                parts.push(num & 0xff);\r\n                num = num >> 8;\r\n            }\r\n            return new Uint8Array(parts.reverse());\r\n        }\r\n\r\n        function strToBuffer(str) {\r\n            return new Uint8Array(str.split('').map(function(e) {\r\n                return e.charCodeAt(0);\r\n            }));\r\n        }\r\n\r\n        function bitsToBuffer(bits) {\r\n            var data = [];\r\n            var pad = (bits.length % 8) ? (new Array(1 + 8 - (bits.length % 8))).join('0') : '';\r\n            bits = pad + bits;\r\n            for (var i = 0; i < bits.length; i += 8) {\r\n                data.push(parseInt(bits.substr(i, 8), 2));\r\n            }\r\n            return new Uint8Array(data);\r\n        }\r\n\r\n        function generateEBML(json) {\r\n            var ebml = [];\r\n            for (var i = 0; i < json.length; i++) {\r\n                var data = json[i].data;\r\n\r\n                if (typeof data === 'object') {\r\n                    data = generateEBML(data);\r\n                }\r\n\r\n                if (typeof data === 'number') {\r\n                    data = bitsToBuffer(data.toString(2));\r\n                }\r\n\r\n                if (typeof data === 'string') {\r\n                    data = strToBuffer(data);\r\n                }\r\n\r\n                var len = data.size || data.byteLength || data.length;\r\n                var zeroes = Math.ceil(Math.ceil(Math.log(len) / Math.log(2)) / 8);\r\n                var sizeToString = len.toString(2);\r\n                var padded = (new Array((zeroes * 7 + 7 + 1) - sizeToString.length)).join('0') + sizeToString;\r\n                var size = (new Array(zeroes)).join('0') + '1' + padded;\r\n\r\n                ebml.push(numToBuffer(json[i].id));\r\n                ebml.push(bitsToBuffer(size));\r\n                ebml.push(data);\r\n            }\r\n\r\n            return new Blob(ebml, {\r\n                type: 'video/webm'\r\n            });\r\n        }\r\n\r\n        function toBinStrOld(bits) {\r\n            var data = '';\r\n            var pad = (bits.length % 8) ? (new Array(1 + 8 - (bits.length % 8))).join('0') : '';\r\n            bits = pad + bits;\r\n            for (var i = 0; i < bits.length; i += 8) {\r\n                data += String.fromCharCode(parseInt(bits.substr(i, 8), 2));\r\n            }\r\n            return data;\r\n        }\r\n\r\n        function makeSimpleBlock(data) {\r\n            var flags = 0;\r\n\r\n            if (data.keyframe) {\r\n                flags |= 128;\r\n            }\r\n\r\n            if (data.invisible) {\r\n                flags |= 8;\r\n            }\r\n\r\n            if (data.lacing) {\r\n                flags |= (data.lacing << 1);\r\n            }\r\n\r\n            if (data.discardable) {\r\n                flags |= 1;\r\n            }\r\n\r\n            if (data.trackNum > 127) {\r\n                throw 'TrackNumber > 127 not supported';\r\n            }\r\n\r\n            var out = [data.trackNum | 0x80, data.timecode >> 8, data.timecode & 0xff, flags].map(function(e) {\r\n                return String.fromCharCode(e);\r\n            }).join('') + data.frame;\r\n\r\n            return out;\r\n        }\r\n\r\n        function parseWebP(riff) {\r\n            var VP8 = riff.RIFF[0].WEBP[0];\r\n\r\n            var frameStart = VP8.indexOf('\\x9d\\x01\\x2a'); // A VP8 keyframe starts with the 0x9d012a header\r\n            for (var i = 0, c = []; i < 4; i++) {\r\n                c[i] = VP8.charCodeAt(frameStart + 3 + i);\r\n            }\r\n\r\n            var width, height, tmp;\r\n\r\n            //the code below is literally copied verbatim from the bitstream spec\r\n            tmp = (c[1] << 8) | c[0];\r\n            width = tmp & 0x3FFF;\r\n            tmp = (c[3] << 8) | c[2];\r\n            height = tmp & 0x3FFF;\r\n            return {\r\n                width: width,\r\n                height: height,\r\n                data: VP8,\r\n                riff: riff\r\n            };\r\n        }\r\n\r\n        function getStrLength(string, offset) {\r\n            return parseInt(string.substr(offset + 4, 4).split('').map(function(i) {\r\n                var unpadded = i.charCodeAt(0).toString(2);\r\n                return (new Array(8 - unpadded.length + 1)).join('0') + unpadded;\r\n            }).join(''), 2);\r\n        }\r\n\r\n        function parseRIFF(string) {\r\n            var offset = 0;\r\n            var chunks = {};\r\n\r\n            while (offset < string.length) {\r\n                var id = string.substr(offset, 4);\r\n                var len = getStrLength(string, offset);\r\n                var data = string.substr(offset + 4 + 4, len);\r\n                offset += 4 + 4 + len;\r\n                chunks[id] = chunks[id] || [];\r\n\r\n                if (id === 'RIFF' || id === 'LIST') {\r\n                    chunks[id].push(parseRIFF(data));\r\n                } else {\r\n                    chunks[id].push(data);\r\n                }\r\n            }\r\n            return chunks;\r\n        }\r\n\r\n        function doubleToString(num) {\r\n            return [].slice.call(\r\n                new Uint8Array((new Float64Array([num])).buffer), 0).map(function(e) {\r\n                return String.fromCharCode(e);\r\n            }).reverse().join('');\r\n        }\r\n\r\n        var webm = new ArrayToWebM(frames.map(function(frame) {\r\n            var webp = parseWebP(parseRIFF(atob(frame.image.slice(23))));\r\n            webp.duration = frame.duration;\r\n            return webp;\r\n        }));\r\n\r\n        postMessage(webm);\r\n    }\r\n\r\n    /**\r\n     * Encodes frames in WebM container. It uses WebWorkinvoke to invoke 'ArrayToWebM' method.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof Whammy\r\n     * @example\r\n     * recorder = new Whammy().Video(0.8, 100);\r\n     * recorder.compile(function(blob) {\r\n     *    // blob.size - blob.type\r\n     * });\r\n     */\r\n    WhammyVideo.prototype.compile = function(callback) {\r\n        var webWorker = processInWebWorker(whammyInWebWorker);\r\n\r\n        webWorker.onmessage = function(event) {\r\n            if (event.data.error) {\r\n                console.error(event.data.error);\r\n                return;\r\n            }\r\n            callback(event.data);\r\n        };\r\n\r\n        webWorker.postMessage(this.frames);\r\n    };\r\n\r\n    return {\r\n        /**\r\n         * A more abstract-ish API.\r\n         * @method\r\n         * @memberof Whammy\r\n         * @example\r\n         * recorder = new Whammy().Video(0.8, 100);\r\n         * @param {?number} speed - 0.8\r\n         * @param {?number} quality - 100\r\n         */\r\n        Video: WhammyVideo\r\n    };\r\n})();\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.Whammy = Whammy;\r\n}\n\r\n// ______________ (indexed-db)\r\n// DiskStorage.js\r\n\r\n/**\r\n * DiskStorage is a standalone object used by {@link RecordRTC} to store recorded blobs in IndexedDB storage.\r\n * @summary Writing blobs into IndexedDB.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @example\r\n * DiskStorage.Store({\r\n *     audioBlob: yourAudioBlob,\r\n *     videoBlob: yourVideoBlob,\r\n *     gifBlob  : yourGifBlob\r\n * });\r\n * DiskStorage.Fetch(function(dataURL, type) {\r\n *     if(type === 'audioBlob') { }\r\n *     if(type === 'videoBlob') { }\r\n *     if(type === 'gifBlob')   { }\r\n * });\r\n * // DiskStorage.dataStoreName = 'recordRTC';\r\n * // DiskStorage.onError = function(error) { };\r\n * @property {function} init - This method must be called once to initialize IndexedDB ObjectStore. Though, it is auto-used internally.\r\n * @property {function} Fetch - This method fetches stored blobs from IndexedDB.\r\n * @property {function} Store - This method stores blobs in IndexedDB.\r\n * @property {function} onError - This function is invoked for any known/unknown error.\r\n * @property {string} dataStoreName - Name of the ObjectStore created in IndexedDB storage.\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\n\r\n\r\nvar DiskStorage = {\r\n    /**\r\n     * This method must be called once to initialize IndexedDB ObjectStore. Though, it is auto-used internally.\r\n     * @method\r\n     * @memberof DiskStorage\r\n     * @internal\r\n     * @example\r\n     * DiskStorage.init();\r\n     */\r\n    init: function() {\r\n        var self = this;\r\n\r\n        if (typeof indexedDB === 'undefined' || typeof indexedDB.open === 'undefined') {\r\n            console.error('IndexedDB API are not available in this browser.');\r\n            return;\r\n        }\r\n\r\n        var dbVersion = 1;\r\n        var dbName = this.dbName || location.href.replace(/\\/|:|#|%|\\.|\\[|\\]/g, ''),\r\n            db;\r\n        var request = indexedDB.open(dbName, dbVersion);\r\n\r\n        function createObjectStore(dataBase) {\r\n            dataBase.createObjectStore(self.dataStoreName);\r\n        }\r\n\r\n        function putInDB() {\r\n            var transaction = db.transaction([self.dataStoreName], 'readwrite');\r\n\r\n            if (self.videoBlob) {\r\n                transaction.objectStore(self.dataStoreName).put(self.videoBlob, 'videoBlob');\r\n            }\r\n\r\n            if (self.gifBlob) {\r\n                transaction.objectStore(self.dataStoreName).put(self.gifBlob, 'gifBlob');\r\n            }\r\n\r\n            if (self.audioBlob) {\r\n                transaction.objectStore(self.dataStoreName).put(self.audioBlob, 'audioBlob');\r\n            }\r\n\r\n            function getFromStore(portionName) {\r\n                transaction.objectStore(self.dataStoreName).get(portionName).onsuccess = function(event) {\r\n                    if (self.callback) {\r\n                        self.callback(event.target.result, portionName);\r\n                    }\r\n                };\r\n            }\r\n\r\n            getFromStore('audioBlob');\r\n            getFromStore('videoBlob');\r\n            getFromStore('gifBlob');\r\n        }\r\n\r\n        request.onerror = self.onError;\r\n\r\n        request.onsuccess = function() {\r\n            db = request.result;\r\n            db.onerror = self.onError;\r\n\r\n            if (db.setVersion) {\r\n                if (db.version !== dbVersion) {\r\n                    var setVersion = db.setVersion(dbVersion);\r\n                    setVersion.onsuccess = function() {\r\n                        createObjectStore(db);\r\n                        putInDB();\r\n                    };\r\n                } else {\r\n                    putInDB();\r\n                }\r\n            } else {\r\n                putInDB();\r\n            }\r\n        };\r\n        request.onupgradeneeded = function(event) {\r\n            createObjectStore(event.target.result);\r\n        };\r\n    },\r\n    /**\r\n     * This method fetches stored blobs from IndexedDB.\r\n     * @method\r\n     * @memberof DiskStorage\r\n     * @internal\r\n     * @example\r\n     * DiskStorage.Fetch(function(dataURL, type) {\r\n     *     if(type === 'audioBlob') { }\r\n     *     if(type === 'videoBlob') { }\r\n     *     if(type === 'gifBlob')   { }\r\n     * });\r\n     */\r\n    Fetch: function(callback) {\r\n        this.callback = callback;\r\n        this.init();\r\n\r\n        return this;\r\n    },\r\n    /**\r\n     * This method stores blobs in IndexedDB.\r\n     * @method\r\n     * @memberof DiskStorage\r\n     * @internal\r\n     * @example\r\n     * DiskStorage.Store({\r\n     *     audioBlob: yourAudioBlob,\r\n     *     videoBlob: yourVideoBlob,\r\n     *     gifBlob  : yourGifBlob\r\n     * });\r\n     */\r\n    Store: function(config) {\r\n        this.audioBlob = config.audioBlob;\r\n        this.videoBlob = config.videoBlob;\r\n        this.gifBlob = config.gifBlob;\r\n\r\n        this.init();\r\n\r\n        return this;\r\n    },\r\n    /**\r\n     * This function is invoked for any known/unknown error.\r\n     * @method\r\n     * @memberof DiskStorage\r\n     * @internal\r\n     * @example\r\n     * DiskStorage.onError = function(error){\r\n     *     alerot( JSON.stringify(error) );\r\n     * };\r\n     */\r\n    onError: function(error) {\r\n        console.error(JSON.stringify(error, null, '\\t'));\r\n    },\r\n\r\n    /**\r\n     * @property {string} dataStoreName - Name of the ObjectStore created in IndexedDB storage.\r\n     * @memberof DiskStorage\r\n     * @internal\r\n     * @example\r\n     * DiskStorage.dataStoreName = 'recordRTC';\r\n     */\r\n    dataStoreName: 'recordRTC',\r\n    dbName: null\r\n};\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.DiskStorage = DiskStorage;\r\n}\n\r\n// ______________\r\n// GifRecorder.js\r\n\r\n/**\r\n * GifRecorder is standalone calss used by {@link RecordRTC} to record video or canvas into animated gif.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef GifRecorder\r\n * @class\r\n * @example\r\n * var recorder = new GifRecorder(mediaStream || canvas || context, { onGifPreview: function, onGifRecordingStarted: function, width: 1280, height: 720, frameRate: 200, quality: 10 });\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     img.src = URL.createObjectURL(blob);\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object or HTMLCanvasElement or CanvasRenderingContext2D.\r\n * @param {object} config - {disableLogs:true, initCallback: function, width: 320, height: 240, frameRate: 200, quality: 10}\r\n */\r\n\r\nfunction GifRecorder(mediaStream, config) {\r\n    if (typeof GIFEncoder === 'undefined') {\r\n        var script = document.createElement('script');\r\n        script.src = 'https://www.webrtc-experiment.com/gif-recorder.js';\r\n        (document.body || document.documentElement).appendChild(script);\r\n    }\r\n\r\n    config = config || {};\r\n\r\n    var isHTMLObject = mediaStream instanceof CanvasRenderingContext2D || mediaStream instanceof HTMLCanvasElement;\r\n\r\n    /**\r\n     * This method records MediaStream.\r\n     * @method\r\n     * @memberof GifRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        if (typeof GIFEncoder === 'undefined') {\r\n            setTimeout(self.record, 1000);\r\n            return;\r\n        }\r\n\r\n        if (!isLoadedMetaData) {\r\n            setTimeout(self.record, 1000);\r\n            return;\r\n        }\r\n\r\n        if (!isHTMLObject) {\r\n            if (!config.width) {\r\n                config.width = video.offsetWidth || 320;\r\n            }\r\n\r\n            if (!config.height) {\r\n                config.height = video.offsetHeight || 240;\r\n            }\r\n\r\n            if (!config.video) {\r\n                config.video = {\r\n                    width: config.width,\r\n                    height: config.height\r\n                };\r\n            }\r\n\r\n            if (!config.canvas) {\r\n                config.canvas = {\r\n                    width: config.width,\r\n                    height: config.height\r\n                };\r\n            }\r\n\r\n            canvas.width = config.canvas.width || 320;\r\n            canvas.height = config.canvas.height || 240;\r\n\r\n            video.width = config.video.width || 320;\r\n            video.height = config.video.height || 240;\r\n        }\r\n\r\n        // external library to record as GIF images\r\n        gifEncoder = new GIFEncoder();\r\n\r\n        // void setRepeat(int iter) \r\n        // Sets the number of times the set of GIF frames should be played. \r\n        // Default is 1; 0 means play indefinitely.\r\n        gifEncoder.setRepeat(0);\r\n\r\n        // void setFrameRate(Number fps) \r\n        // Sets frame rate in frames per second. \r\n        // Equivalent to setDelay(1000/fps).\r\n        // Using \"setDelay\" instead of \"setFrameRate\"\r\n        gifEncoder.setDelay(config.frameRate || 200);\r\n\r\n        // void setQuality(int quality) \r\n        // Sets quality of color quantization (conversion of images to the \r\n        // maximum 256 colors allowed by the GIF specification). \r\n        // Lower values (minimum = 1) produce better colors, \r\n        // but slow processing significantly. 10 is the default, \r\n        // and produces good color mapping at reasonable speeds. \r\n        // Values greater than 20 do not yield significant improvements in speed.\r\n        gifEncoder.setQuality(config.quality || 10);\r\n\r\n        // Boolean start() \r\n        // This writes the GIF Header and returns false if it fails.\r\n        gifEncoder.start();\r\n\r\n        if (typeof config.onGifRecordingStarted === 'function') {\r\n            config.onGifRecordingStarted();\r\n        }\r\n\r\n        startTime = Date.now();\r\n\r\n        function drawVideoFrame(time) {\r\n            if (self.clearedRecordedData === true) {\r\n                return;\r\n            }\r\n\r\n            if (isPausedRecording) {\r\n                return setTimeout(function() {\r\n                    drawVideoFrame(time);\r\n                }, 100);\r\n            }\r\n\r\n            lastAnimationFrame = requestAnimationFrame(drawVideoFrame);\r\n\r\n            if (typeof lastFrameTime === undefined) {\r\n                lastFrameTime = time;\r\n            }\r\n\r\n            // ~10 fps\r\n            if (time - lastFrameTime < 90) {\r\n                return;\r\n            }\r\n\r\n            if (!isHTMLObject && video.paused) {\r\n                // via: https://github.com/muaz-khan/WebRTC-Experiment/pull/316\r\n                // Tweak for Android Chrome\r\n                video.play();\r\n            }\r\n\r\n            if (!isHTMLObject) {\r\n                context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n            }\r\n\r\n            if (config.onGifPreview) {\r\n                config.onGifPreview(canvas.toDataURL('image/png'));\r\n            }\r\n\r\n            gifEncoder.addFrame(context);\r\n            lastFrameTime = time;\r\n        }\r\n\r\n        lastAnimationFrame = requestAnimationFrame(drawVideoFrame);\r\n\r\n        if (config.initCallback) {\r\n            config.initCallback();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method stops recording MediaStream.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof GifRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     img.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        callback = callback || function() {};\r\n\r\n        if (lastAnimationFrame) {\r\n            cancelAnimationFrame(lastAnimationFrame);\r\n        }\r\n\r\n        endTime = Date.now();\r\n\r\n        /**\r\n         * @property {Blob} blob - The recorded blob object.\r\n         * @memberof GifRecorder\r\n         * @example\r\n         * recorder.stop(function(){\r\n         *     var blob = recorder.blob;\r\n         * });\r\n         */\r\n        this.blob = new Blob([new Uint8Array(gifEncoder.stream().bin)], {\r\n            type: 'image/gif'\r\n        });\r\n\r\n        callback(this.blob);\r\n\r\n        // bug: find a way to clear old recorded blobs\r\n        gifEncoder.stream().bin = [];\r\n    };\r\n\r\n    var isPausedRecording = false;\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof GifRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        isPausedRecording = true;\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof GifRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        isPausedRecording = false;\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof GifRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        self.clearedRecordedData = true;\r\n        clearRecordedDataCB();\r\n    };\r\n\r\n    function clearRecordedDataCB() {\r\n        if (gifEncoder) {\r\n            gifEncoder.stream().bin = [];\r\n        }\r\n    }\r\n\r\n    // for debugging\r\n    this.name = 'GifRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    var canvas = document.createElement('canvas');\r\n    var context = canvas.getContext('2d');\r\n\r\n    if (isHTMLObject) {\r\n        if (mediaStream instanceof CanvasRenderingContext2D) {\r\n            context = mediaStream;\r\n            canvas = context.canvas;\r\n        } else if (mediaStream instanceof HTMLCanvasElement) {\r\n            context = mediaStream.getContext('2d');\r\n            canvas = mediaStream;\r\n        }\r\n    }\r\n\r\n    var isLoadedMetaData = true;\r\n\r\n    if (!isHTMLObject) {\r\n        var video = document.createElement('video');\r\n        video.muted = true;\r\n        video.autoplay = true;\r\n        video.playsInline = true;\r\n\r\n        isLoadedMetaData = false;\r\n        video.onloadedmetadata = function() {\r\n            isLoadedMetaData = true;\r\n        };\r\n\r\n        setSrcObject(mediaStream, video);\r\n\r\n        video.play();\r\n    }\r\n\r\n    var lastAnimationFrame = null;\r\n    var startTime, endTime, lastFrameTime;\r\n\r\n    var gifEncoder;\r\n\r\n    var self = this;\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.GifRecorder = GifRecorder;\r\n}\n\r\n// Last time updated: 2019-06-21 4:09:42 AM UTC\r\n\r\n// ________________________\r\n// MultiStreamsMixer v1.2.2\r\n\r\n// Open-Sourced: https://github.com/muaz-khan/MultiStreamsMixer\r\n\r\n// --------------------------------------------------\r\n// Muaz Khan     - www.MuazKhan.com\r\n// MIT License   - www.WebRTC-Experiment.com/licence\r\n// --------------------------------------------------\r\n\r\nfunction MultiStreamsMixer(arrayOfMediaStreams, elementClass) {\r\n\r\n    var browserFakeUserAgent = 'Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45';\r\n\r\n    (function(that) {\r\n        if (typeof RecordRTC !== 'undefined') {\r\n            return;\r\n        }\r\n\r\n        if (!that) {\r\n            return;\r\n        }\r\n\r\n        if (typeof window !== 'undefined') {\r\n            return;\r\n        }\r\n\r\n        if (typeof global === 'undefined') {\r\n            return;\r\n        }\r\n\r\n        global.navigator = {\r\n            userAgent: browserFakeUserAgent,\r\n            getUserMedia: function() {}\r\n        };\r\n\r\n        if (!global.console) {\r\n            global.console = {};\r\n        }\r\n\r\n        if (typeof global.console.log === 'undefined' || typeof global.console.error === 'undefined') {\r\n            global.console.error = global.console.log = global.console.log || function() {\r\n                console.log(arguments);\r\n            };\r\n        }\r\n\r\n        if (typeof document === 'undefined') {\r\n            /*global document:true */\r\n            that.document = {\r\n                documentElement: {\r\n                    appendChild: function() {\r\n                        return '';\r\n                    }\r\n                }\r\n            };\r\n\r\n            document.createElement = document.captureStream = document.mozCaptureStream = function() {\r\n                var obj = {\r\n                    getContext: function() {\r\n                        return obj;\r\n                    },\r\n                    play: function() {},\r\n                    pause: function() {},\r\n                    drawImage: function() {},\r\n                    toDataURL: function() {\r\n                        return '';\r\n                    },\r\n                    style: {}\r\n                };\r\n                return obj;\r\n            };\r\n\r\n            that.HTMLVideoElement = function() {};\r\n        }\r\n\r\n        if (typeof location === 'undefined') {\r\n            /*global location:true */\r\n            that.location = {\r\n                protocol: 'file:',\r\n                href: '',\r\n                hash: ''\r\n            };\r\n        }\r\n\r\n        if (typeof screen === 'undefined') {\r\n            /*global screen:true */\r\n            that.screen = {\r\n                width: 0,\r\n                height: 0\r\n            };\r\n        }\r\n\r\n        if (typeof URL === 'undefined') {\r\n            /*global screen:true */\r\n            that.URL = {\r\n                createObjectURL: function() {\r\n                    return '';\r\n                },\r\n                revokeObjectURL: function() {\r\n                    return '';\r\n                }\r\n            };\r\n        }\r\n\r\n        /*global window:true */\r\n        that.window = global;\r\n    })(typeof global !== 'undefined' ? global : null);\r\n\r\n    // requires: chrome://flags/#enable-experimental-web-platform-features\r\n\r\n    elementClass = elementClass || 'multi-streams-mixer';\r\n\r\n    var videos = [];\r\n    var isStopDrawingFrames = false;\r\n\r\n    var canvas = document.createElement('canvas');\r\n    var context = canvas.getContext('2d');\r\n    canvas.style.opacity = 0;\r\n    canvas.style.position = 'absolute';\r\n    canvas.style.zIndex = -1;\r\n    canvas.style.top = '-1000em';\r\n    canvas.style.left = '-1000em';\r\n    canvas.className = elementClass;\r\n    (document.body || document.documentElement).appendChild(canvas);\r\n\r\n    this.disableLogs = false;\r\n    this.frameInterval = 10;\r\n\r\n    this.width = 360;\r\n    this.height = 240;\r\n\r\n    // use gain node to prevent echo\r\n    this.useGainNode = true;\r\n\r\n    var self = this;\r\n\r\n    // _____________________________\r\n    // Cross-Browser-Declarations.js\r\n\r\n    // WebAudio API representer\r\n    var AudioContext = window.AudioContext;\r\n\r\n    if (typeof AudioContext === 'undefined') {\r\n        if (typeof webkitAudioContext !== 'undefined') {\r\n            /*global AudioContext:true */\r\n            AudioContext = webkitAudioContext;\r\n        }\r\n\r\n        if (typeof mozAudioContext !== 'undefined') {\r\n            /*global AudioContext:true */\r\n            AudioContext = mozAudioContext;\r\n        }\r\n    }\r\n\r\n    /*jshint -W079 */\r\n    var URL = window.URL;\r\n\r\n    if (typeof URL === 'undefined' && typeof webkitURL !== 'undefined') {\r\n        /*global URL:true */\r\n        URL = webkitURL;\r\n    }\r\n\r\n    if (typeof navigator !== 'undefined' && typeof navigator.getUserMedia === 'undefined') { // maybe window.navigator?\r\n        if (typeof navigator.webkitGetUserMedia !== 'undefined') {\r\n            navigator.getUserMedia = navigator.webkitGetUserMedia;\r\n        }\r\n\r\n        if (typeof navigator.mozGetUserMedia !== 'undefined') {\r\n            navigator.getUserMedia = navigator.mozGetUserMedia;\r\n        }\r\n    }\r\n\r\n    var MediaStream = window.MediaStream;\r\n\r\n    if (typeof MediaStream === 'undefined' && typeof webkitMediaStream !== 'undefined') {\r\n        MediaStream = webkitMediaStream;\r\n    }\r\n\r\n    /*global MediaStream:true */\r\n    if (typeof MediaStream !== 'undefined') {\r\n        // override \"stop\" method for all browsers\r\n        if (typeof MediaStream.prototype.stop === 'undefined') {\r\n            MediaStream.prototype.stop = function() {\r\n                this.getTracks().forEach(function(track) {\r\n                    track.stop();\r\n                });\r\n            };\r\n        }\r\n    }\r\n\r\n    var Storage = {};\r\n\r\n    if (typeof AudioContext !== 'undefined') {\r\n        Storage.AudioContext = AudioContext;\r\n    } else if (typeof webkitAudioContext !== 'undefined') {\r\n        Storage.AudioContext = webkitAudioContext;\r\n    }\r\n\r\n    function setSrcObject(stream, element) {\r\n        if ('srcObject' in element) {\r\n            element.srcObject = stream;\r\n        } else if ('mozSrcObject' in element) {\r\n            element.mozSrcObject = stream;\r\n        } else {\r\n            element.srcObject = stream;\r\n        }\r\n    }\r\n\r\n    this.startDrawingFrames = function() {\r\n        drawVideosToCanvas();\r\n    };\r\n\r\n    function drawVideosToCanvas() {\r\n        if (isStopDrawingFrames) {\r\n            return;\r\n        }\r\n\r\n        var videosLength = videos.length;\r\n\r\n        var fullcanvas = false;\r\n        var remaining = [];\r\n        videos.forEach(function(video) {\r\n            if (!video.stream) {\r\n                video.stream = {};\r\n            }\r\n\r\n            if (video.stream.fullcanvas) {\r\n                fullcanvas = video;\r\n            } else {\r\n                // todo: video.stream.active or video.stream.live to fix blank frames issues?\r\n                remaining.push(video);\r\n            }\r\n        });\r\n\r\n        if (fullcanvas) {\r\n            canvas.width = fullcanvas.stream.width;\r\n            canvas.height = fullcanvas.stream.height;\r\n        } else if (remaining.length) {\r\n            canvas.width = videosLength > 1 ? remaining[0].width * 2 : remaining[0].width;\r\n\r\n            var height = 1;\r\n            if (videosLength === 3 || videosLength === 4) {\r\n                height = 2;\r\n            }\r\n            if (videosLength === 5 || videosLength === 6) {\r\n                height = 3;\r\n            }\r\n            if (videosLength === 7 || videosLength === 8) {\r\n                height = 4;\r\n            }\r\n            if (videosLength === 9 || videosLength === 10) {\r\n                height = 5;\r\n            }\r\n            canvas.height = remaining[0].height * height;\r\n        } else {\r\n            canvas.width = self.width || 360;\r\n            canvas.height = self.height || 240;\r\n        }\r\n\r\n        if (fullcanvas && fullcanvas instanceof HTMLVideoElement) {\r\n            drawImage(fullcanvas);\r\n        }\r\n\r\n        remaining.forEach(function(video, idx) {\r\n            drawImage(video, idx);\r\n        });\r\n\r\n        setTimeout(drawVideosToCanvas, self.frameInterval);\r\n    }\r\n\r\n    function drawImage(video, idx) {\r\n        if (isStopDrawingFrames) {\r\n            return;\r\n        }\r\n\r\n        var x = 0;\r\n        var y = 0;\r\n        var width = video.width;\r\n        var height = video.height;\r\n\r\n        if (idx === 1) {\r\n            x = video.width;\r\n        }\r\n\r\n        if (idx === 2) {\r\n            y = video.height;\r\n        }\r\n\r\n        if (idx === 3) {\r\n            x = video.width;\r\n            y = video.height;\r\n        }\r\n\r\n        if (idx === 4) {\r\n            y = video.height * 2;\r\n        }\r\n\r\n        if (idx === 5) {\r\n            x = video.width;\r\n            y = video.height * 2;\r\n        }\r\n\r\n        if (idx === 6) {\r\n            y = video.height * 3;\r\n        }\r\n\r\n        if (idx === 7) {\r\n            x = video.width;\r\n            y = video.height * 3;\r\n        }\r\n\r\n        if (typeof video.stream.left !== 'undefined') {\r\n            x = video.stream.left;\r\n        }\r\n\r\n        if (typeof video.stream.top !== 'undefined') {\r\n            y = video.stream.top;\r\n        }\r\n\r\n        if (typeof video.stream.width !== 'undefined') {\r\n            width = video.stream.width;\r\n        }\r\n\r\n        if (typeof video.stream.height !== 'undefined') {\r\n            height = video.stream.height;\r\n        }\r\n\r\n        context.drawImage(video, x, y, width, height);\r\n\r\n        if (typeof video.stream.onRender === 'function') {\r\n            video.stream.onRender(context, x, y, width, height, idx);\r\n        }\r\n    }\r\n\r\n    function getMixedStream() {\r\n        isStopDrawingFrames = false;\r\n        var mixedVideoStream = getMixedVideoStream();\r\n\r\n        var mixedAudioStream = getMixedAudioStream();\r\n        if (mixedAudioStream) {\r\n            mixedAudioStream.getTracks().filter(function(t) {\r\n                return t.kind === 'audio';\r\n            }).forEach(function(track) {\r\n                mixedVideoStream.addTrack(track);\r\n            });\r\n        }\r\n\r\n        var fullcanvas;\r\n        arrayOfMediaStreams.forEach(function(stream) {\r\n            if (stream.fullcanvas) {\r\n                fullcanvas = true;\r\n            }\r\n        });\r\n\r\n        // mixedVideoStream.prototype.appendStreams = appendStreams;\r\n        // mixedVideoStream.prototype.resetVideoStreams = resetVideoStreams;\r\n        // mixedVideoStream.prototype.clearRecordedData = clearRecordedData;\r\n\r\n        return mixedVideoStream;\r\n    }\r\n\r\n    function getMixedVideoStream() {\r\n        resetVideoStreams();\r\n\r\n        var capturedStream;\r\n\r\n        if ('captureStream' in canvas) {\r\n            capturedStream = canvas.captureStream();\r\n        } else if ('mozCaptureStream' in canvas) {\r\n            capturedStream = canvas.mozCaptureStream();\r\n        } else if (!self.disableLogs) {\r\n            console.error('Upgrade to latest Chrome or otherwise enable this flag: chrome://flags/#enable-experimental-web-platform-features');\r\n        }\r\n\r\n        var videoStream = new MediaStream();\r\n\r\n        capturedStream.getTracks().filter(function(t) {\r\n            return t.kind === 'video';\r\n        }).forEach(function(track) {\r\n            videoStream.addTrack(track);\r\n        });\r\n\r\n        canvas.stream = videoStream;\r\n\r\n        return videoStream;\r\n    }\r\n\r\n    function getMixedAudioStream() {\r\n        // via: @pehrsons\r\n        if (!Storage.AudioContextConstructor) {\r\n            Storage.AudioContextConstructor = new Storage.AudioContext();\r\n        }\r\n\r\n        self.audioContext = Storage.AudioContextConstructor;\r\n\r\n        self.audioSources = [];\r\n\r\n        if (self.useGainNode === true) {\r\n            self.gainNode = self.audioContext.createGain();\r\n            self.gainNode.connect(self.audioContext.destination);\r\n            self.gainNode.gain.value = 0; // don't hear self\r\n        }\r\n\r\n        var audioTracksLength = 0;\r\n        arrayOfMediaStreams.forEach(function(stream) {\r\n            if (!stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'audio';\r\n                }).length) {\r\n                return;\r\n            }\r\n\r\n            audioTracksLength++;\r\n\r\n            var audioSource = self.audioContext.createMediaStreamSource(stream);\r\n\r\n            if (self.useGainNode === true) {\r\n                audioSource.connect(self.gainNode);\r\n            }\r\n\r\n            self.audioSources.push(audioSource);\r\n        });\r\n\r\n        if (!audioTracksLength) {\r\n            // because \"self.audioContext\" is not initialized\r\n            // that's why we've to ignore rest of the code\r\n            return;\r\n        }\r\n\r\n        self.audioDestination = self.audioContext.createMediaStreamDestination();\r\n        self.audioSources.forEach(function(audioSource) {\r\n            audioSource.connect(self.audioDestination);\r\n        });\r\n        return self.audioDestination.stream;\r\n    }\r\n\r\n    function getVideo(stream) {\r\n        var video = document.createElement('video');\r\n\r\n        setSrcObject(stream, video);\r\n\r\n        video.className = elementClass;\r\n\r\n        video.muted = true;\r\n        video.volume = 0;\r\n\r\n        video.width = stream.width || self.width || 360;\r\n        video.height = stream.height || self.height || 240;\r\n\r\n        video.play();\r\n\r\n        return video;\r\n    }\r\n\r\n    this.appendStreams = function(streams) {\r\n        if (!streams) {\r\n            throw 'First parameter is required.';\r\n        }\r\n\r\n        if (!(streams instanceof Array)) {\r\n            streams = [streams];\r\n        }\r\n\r\n        streams.forEach(function(stream) {\r\n            var newStream = new MediaStream();\r\n\r\n            if (stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'video';\r\n                }).length) {\r\n                var video = getVideo(stream);\r\n                video.stream = stream;\r\n                videos.push(video);\r\n\r\n                newStream.addTrack(stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'video';\r\n                })[0]);\r\n            }\r\n\r\n            if (stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'audio';\r\n                }).length) {\r\n                var audioSource = self.audioContext.createMediaStreamSource(stream);\r\n                self.audioDestination = self.audioContext.createMediaStreamDestination();\r\n                audioSource.connect(self.audioDestination);\r\n\r\n                newStream.addTrack(self.audioDestination.stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'audio';\r\n                })[0]);\r\n            }\r\n\r\n            arrayOfMediaStreams.push(newStream);\r\n        });\r\n    };\r\n\r\n    this.releaseStreams = function() {\r\n        videos = [];\r\n        isStopDrawingFrames = true;\r\n\r\n        if (self.gainNode) {\r\n            self.gainNode.disconnect();\r\n            self.gainNode = null;\r\n        }\r\n\r\n        if (self.audioSources.length) {\r\n            self.audioSources.forEach(function(source) {\r\n                source.disconnect();\r\n            });\r\n            self.audioSources = [];\r\n        }\r\n\r\n        if (self.audioDestination) {\r\n            self.audioDestination.disconnect();\r\n            self.audioDestination = null;\r\n        }\r\n\r\n        if (self.audioContext) {\r\n            self.audioContext.close();\r\n        }\r\n\r\n        self.audioContext = null;\r\n\r\n        context.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        if (canvas.stream) {\r\n            canvas.stream.stop();\r\n            canvas.stream = null;\r\n        }\r\n    };\r\n\r\n    this.resetVideoStreams = function(streams) {\r\n        if (streams && !(streams instanceof Array)) {\r\n            streams = [streams];\r\n        }\r\n\r\n        resetVideoStreams(streams);\r\n    };\r\n\r\n    function resetVideoStreams(streams) {\r\n        videos = [];\r\n        streams = streams || arrayOfMediaStreams;\r\n\r\n        // via: @adrian-ber\r\n        streams.forEach(function(stream) {\r\n            if (!stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'video';\r\n                }).length) {\r\n                return;\r\n            }\r\n\r\n            var video = getVideo(stream);\r\n            video.stream = stream;\r\n            videos.push(video);\r\n        });\r\n    }\r\n\r\n    // for debugging\r\n    this.name = 'MultiStreamsMixer';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    this.getMixedStream = getMixedStream;\r\n\r\n}\r\n\r\nif (typeof RecordRTC === 'undefined') {\r\n    if (typeof module !== 'undefined' /* && !!module.exports*/ ) {\r\n        module.exports = MultiStreamsMixer;\r\n    }\r\n\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('MultiStreamsMixer', [], function() {\r\n            return MultiStreamsMixer;\r\n        });\r\n    }\r\n}\n\r\n// ______________________\r\n// MultiStreamRecorder.js\r\n\r\n/*\r\n * Video conference recording, using captureStream API along with WebAudio and Canvas2D API.\r\n */\r\n\r\n/**\r\n * MultiStreamRecorder can record multiple videos in single container.\r\n * @summary Multi-videos recorder.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef MultiStreamRecorder\r\n * @class\r\n * @example\r\n * var options = {\r\n *     mimeType: 'video/webm'\r\n * }\r\n * var recorder = new MultiStreamRecorder(ArrayOfMediaStreams, options);\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n *\r\n *     // or\r\n *     var blob = recorder.blob;\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStreams} mediaStreams - Array of MediaStreams.\r\n * @param {object} config - {disableLogs:true, frameInterval: 1, mimeType: \"video/webm\"}\r\n */\r\n\r\nfunction MultiStreamRecorder(arrayOfMediaStreams, options) {\r\n    arrayOfMediaStreams = arrayOfMediaStreams || [];\r\n    var self = this;\r\n\r\n    var mixer;\r\n    var mediaRecorder;\r\n\r\n    options = options || {\r\n        elementClass: 'multi-streams-mixer',\r\n        mimeType: 'video/webm',\r\n        video: {\r\n            width: 360,\r\n            height: 240\r\n        }\r\n    };\r\n\r\n    if (!options.frameInterval) {\r\n        options.frameInterval = 10;\r\n    }\r\n\r\n    if (!options.video) {\r\n        options.video = {};\r\n    }\r\n\r\n    if (!options.video.width) {\r\n        options.video.width = 360;\r\n    }\r\n\r\n    if (!options.video.height) {\r\n        options.video.height = 240;\r\n    }\r\n\r\n    /**\r\n     * This method records all MediaStreams.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        // github/muaz-khan/MultiStreamsMixer\r\n        mixer = new MultiStreamsMixer(arrayOfMediaStreams, options.elementClass || 'multi-streams-mixer');\r\n\r\n        if (getAllVideoTracks().length) {\r\n            mixer.frameInterval = options.frameInterval || 10;\r\n            mixer.width = options.video.width || 360;\r\n            mixer.height = options.video.height || 240;\r\n            mixer.startDrawingFrames();\r\n        }\r\n\r\n        if (options.previewStream && typeof options.previewStream === 'function') {\r\n            options.previewStream(mixer.getMixedStream());\r\n        }\r\n\r\n        // record using MediaRecorder API\r\n        mediaRecorder = new MediaStreamRecorder(mixer.getMixedStream(), options);\r\n        mediaRecorder.record();\r\n    };\r\n\r\n    function getAllVideoTracks() {\r\n        var tracks = [];\r\n        arrayOfMediaStreams.forEach(function(stream) {\r\n            getTracks(stream, 'video').forEach(function(track) {\r\n                tracks.push(track);\r\n            });\r\n        });\r\n        return tracks;\r\n    }\r\n\r\n    /**\r\n     * This method stops recording MediaStream.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        if (!mediaRecorder) {\r\n            return;\r\n        }\r\n\r\n        mediaRecorder.stop(function(blob) {\r\n            self.blob = blob;\r\n\r\n            callback(blob);\r\n\r\n            self.clearRecordedData();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        if (mediaRecorder) {\r\n            mediaRecorder.pause();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        if (mediaRecorder) {\r\n            mediaRecorder.resume();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        if (mediaRecorder) {\r\n            mediaRecorder.clearRecordedData();\r\n            mediaRecorder = null;\r\n        }\r\n\r\n        if (mixer) {\r\n            mixer.releaseStreams();\r\n            mixer = null;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Add extra media-streams to existing recordings.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @param {MediaStreams} mediaStreams - Array of MediaStreams\r\n     * @example\r\n     * recorder.addStreams([newAudioStream, newVideoStream]);\r\n     */\r\n    this.addStreams = function(streams) {\r\n        if (!streams) {\r\n            throw 'First parameter is required.';\r\n        }\r\n\r\n        if (!(streams instanceof Array)) {\r\n            streams = [streams];\r\n        }\r\n\r\n        arrayOfMediaStreams.concat(streams);\r\n\r\n        if (!mediaRecorder || !mixer) {\r\n            return;\r\n        }\r\n\r\n        mixer.appendStreams(streams);\r\n\r\n        if (options.previewStream && typeof options.previewStream === 'function') {\r\n            options.previewStream(mixer.getMixedStream());\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Reset videos during live recording. Replace old videos e.g. replace cameras with full-screen.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @param {MediaStreams} mediaStreams - Array of MediaStreams\r\n     * @example\r\n     * recorder.resetVideoStreams([newVideo1, newVideo2]);\r\n     */\r\n    this.resetVideoStreams = function(streams) {\r\n        if (!mixer) {\r\n            return;\r\n        }\r\n\r\n        if (streams && !(streams instanceof Array)) {\r\n            streams = [streams];\r\n        }\r\n\r\n        mixer.resetVideoStreams(streams);\r\n    };\r\n\r\n    /**\r\n     * Returns MultiStreamsMixer\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * let mixer = recorder.getMixer();\r\n     * mixer.appendStreams([newStream]);\r\n     */\r\n    this.getMixer = function() {\r\n        return mixer;\r\n    };\r\n\r\n    // for debugging\r\n    this.name = 'MultiStreamRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.MultiStreamRecorder = MultiStreamRecorder;\r\n}\n\r\n// _____________________\r\n// RecordRTC.promises.js\r\n\r\n/**\r\n * RecordRTCPromisesHandler adds promises support in {@link RecordRTC}. Try a {@link https://github.com/muaz-khan/RecordRTC/blob/master/simple-demos/RecordRTCPromisesHandler.html|demo here}\r\n * @summary Promises for {@link RecordRTC}\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef RecordRTCPromisesHandler\r\n * @class\r\n * @example\r\n * var recorder = new RecordRTCPromisesHandler(mediaStream, options);\r\n * recorder.startRecording()\r\n *         .then(successCB)\r\n *         .catch(errorCB);\r\n * // Note: You can access all RecordRTC API using \"recorder.recordRTC\" e.g. \r\n * recorder.recordRTC.onStateChanged = function(state) {};\r\n * recorder.recordRTC.setRecordingDuration(5000);\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - Single media-stream object, array of media-streams, html-canvas-element, etc.\r\n * @param {object} config - {type:\"video\", recorderType: MediaStreamRecorder, disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, etc.}\r\n * @throws Will throw an error if \"new\" keyword is not used to initiate \"RecordRTCPromisesHandler\". Also throws error if first argument \"MediaStream\" is missing.\r\n * @requires {@link RecordRTC}\r\n */\r\n\r\nfunction RecordRTCPromisesHandler(mediaStream, options) {\r\n    if (!this) {\r\n        throw 'Use \"new RecordRTCPromisesHandler()\"';\r\n    }\r\n\r\n    if (typeof mediaStream === 'undefined') {\r\n        throw 'First argument \"MediaStream\" is required.';\r\n    }\r\n\r\n    var self = this;\r\n\r\n    /**\r\n     * @property {Blob} blob - Access/reach the native {@link RecordRTC} object.\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * let internal = recorder.recordRTC.getInternalRecorder();\r\n     * alert(internal instanceof MediaStreamRecorder);\r\n     * recorder.recordRTC.onStateChanged = function(state) {};\r\n     */\r\n    self.recordRTC = new RecordRTC(mediaStream, options);\r\n\r\n    /**\r\n     * This method records MediaStream.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.startRecording()\r\n     *         .then(successCB)\r\n     *         .catch(errorCB);\r\n     */\r\n    this.startRecording = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                self.recordRTC.startRecording();\r\n                resolve();\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method stops the recording.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.stopRecording().then(function() {\r\n     *     var blob = recorder.getBlob();\r\n     * }).catch(errorCB);\r\n     */\r\n    this.stopRecording = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                self.recordRTC.stopRecording(function(url) {\r\n                    self.blob = self.recordRTC.getBlob();\r\n\r\n                    if (!self.blob || !self.blob.size) {\r\n                        reject('Empty blob.', self.blob);\r\n                        return;\r\n                    }\r\n\r\n                    resolve(url);\r\n                });\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method pauses the recording. You can resume recording using \"resumeRecording\" method.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.pauseRecording()\r\n     *         .then(successCB)\r\n     *         .catch(errorCB);\r\n     */\r\n    this.pauseRecording = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                self.recordRTC.pauseRecording();\r\n                resolve();\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.resumeRecording()\r\n     *         .then(successCB)\r\n     *         .catch(errorCB);\r\n     */\r\n    this.resumeRecording = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                self.recordRTC.resumeRecording();\r\n                resolve();\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method returns data-url for the recorded blob.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.stopRecording().then(function() {\r\n     *     recorder.getDataURL().then(function(dataURL) {\r\n     *         window.open(dataURL);\r\n     *     }).catch(errorCB);;\r\n     * }).catch(errorCB);\r\n     */\r\n    this.getDataURL = function(callback) {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                self.recordRTC.getDataURL(function(dataURL) {\r\n                    resolve(dataURL);\r\n                });\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method returns the recorded blob.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.stopRecording().then(function() {\r\n     *     recorder.getBlob().then(function(blob) {})\r\n     * }).catch(errorCB);\r\n     */\r\n    this.getBlob = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                resolve(self.recordRTC.getBlob());\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method returns the internal recording object.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * let internalRecorder = await recorder.getInternalRecorder();\r\n     * if(internalRecorder instanceof MultiStreamRecorder) {\r\n     *     internalRecorder.addStreams([newAudioStream]);\r\n     *     internalRecorder.resetVideoStreams([screenStream]);\r\n     * }\r\n     * @returns {Object} \r\n     */\r\n    this.getInternalRecorder = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                resolve(self.recordRTC.getInternalRecorder());\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method resets the recorder. So that you can reuse single recorder instance many times.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * await recorder.reset();\r\n     * recorder.startRecording(); // record again\r\n     */\r\n    this.reset = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                resolve(self.recordRTC.reset());\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Destroy RecordRTC instance. Clear all recorders and objects.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.destroy().then(successCB).catch(errorCB);\r\n     */\r\n    this.destroy = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                resolve(self.recordRTC.destroy());\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Get recorder's readonly state.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * let state = await recorder.getState();\r\n     * // or\r\n     * recorder.getState().then(state => { console.log(state); })\r\n     * @returns {String} Returns recording state.\r\n     */\r\n    this.getState = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                resolve(self.recordRTC.getState());\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * @property {Blob} blob - Recorded data as \"Blob\" object.\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * await recorder.stopRecording();\r\n     * let blob = recorder.getBlob(); // or \"recorder.recordRTC.blob\"\r\n     * invokeSaveAsDialog(blob);\r\n     */\r\n    this.blob = null;\r\n\r\n    /**\r\n     * RecordRTC version number\r\n     * @property {String} version - Release version number.\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @static\r\n     * @readonly\r\n     * @example\r\n     * alert(recorder.version);\r\n     */\r\n    this.version = '5.6.2';\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.RecordRTCPromisesHandler = RecordRTCPromisesHandler;\r\n}\n\r\n// ______________________\r\n// WebAssemblyRecorder.js\r\n\r\n/**\r\n * WebAssemblyRecorder lets you create webm videos in JavaScript via WebAssembly. The library consumes raw RGBA32 buffers (4 bytes per pixel) and turns them into a webm video with the given framerate and quality. This makes it compatible out-of-the-box with ImageData from a CANVAS. With realtime mode you can also use webm-wasm for streaming webm videos.\r\n * @summary Video recording feature in Chrome, Firefox and maybe Edge.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef WebAssemblyRecorder\r\n * @class\r\n * @example\r\n * var recorder = new WebAssemblyRecorder(mediaStream);\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {webAssemblyPath:'webm-wasm.wasm',workerPath: 'webm-worker.js', frameRate: 30, width: 1920, height: 1080, bitrate: 1024, realtime: true}\r\n */\r\nfunction WebAssemblyRecorder(stream, config) {\r\n    // based on: github.com/GoogleChromeLabs/webm-wasm\r\n\r\n    if (typeof ReadableStream === 'undefined' || typeof WritableStream === 'undefined') {\r\n        // because it fixes readable/writable streams issues\r\n        console.error('Following polyfill is strongly recommended: https://unpkg.com/@mattiasbuelens/web-streams-polyfill/dist/polyfill.min.js');\r\n    }\r\n\r\n    config = config || {};\r\n\r\n    config.width = config.width || 640;\r\n    config.height = config.height || 480;\r\n    config.frameRate = config.frameRate || 30;\r\n    config.bitrate = config.bitrate || 1200;\r\n    config.realtime = config.realtime || true;\r\n\r\n    function createBufferURL(buffer, type) {\r\n        return URL.createObjectURL(new Blob([buffer], {\r\n            type: type || ''\r\n        }));\r\n    }\r\n\r\n    var finished;\r\n\r\n    function cameraStream() {\r\n        return new ReadableStream({\r\n            start: function(controller) {\r\n                var cvs = document.createElement('canvas');\r\n                var video = document.createElement('video');\r\n                var first = true;\r\n                video.srcObject = stream;\r\n                video.muted = true;\r\n                video.height = config.height;\r\n                video.width = config.width;\r\n                video.volume = 0;\r\n                video.onplaying = function() {\r\n                    cvs.width = config.width;\r\n                    cvs.height = config.height;\r\n                    var ctx = cvs.getContext('2d');\r\n                    var frameTimeout = 1000 / config.frameRate;\r\n                    var cameraTimer = setInterval(function f() {\r\n                        if (finished) {\r\n                            clearInterval(cameraTimer);\r\n                            controller.close();\r\n                        }\r\n\r\n                        if (first) {\r\n                            first = false;\r\n                            if (config.onVideoProcessStarted) {\r\n                                config.onVideoProcessStarted();\r\n                            }\r\n                        }\r\n\r\n                        ctx.drawImage(video, 0, 0);\r\n                        if (controller._controlledReadableStream.state !== 'closed') {\r\n                            try {\r\n                                controller.enqueue(\r\n                                    ctx.getImageData(0, 0, config.width, config.height)\r\n                                );\r\n                            } catch (e) {}\r\n                        }\r\n                    }, frameTimeout);\r\n                };\r\n                video.play();\r\n            }\r\n        });\r\n    }\r\n\r\n    var worker;\r\n\r\n    function startRecording(stream, buffer) {\r\n        if (!config.workerPath && !buffer) {\r\n            finished = false;\r\n\r\n            // is it safe to use @latest ?\r\n\r\n            fetch(\r\n                'https://unpkg.com/webm-wasm@latest/dist/webm-worker.js'\r\n            ).then(function(r) {\r\n                r.arrayBuffer().then(function(buffer) {\r\n                    startRecording(stream, buffer);\r\n                });\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (!config.workerPath && buffer instanceof ArrayBuffer) {\r\n            var blob = new Blob([buffer], {\r\n                type: 'text/javascript'\r\n            });\r\n            config.workerPath = URL.createObjectURL(blob);\r\n        }\r\n\r\n        if (!config.workerPath) {\r\n            console.error('workerPath parameter is missing.');\r\n        }\r\n\r\n        worker = new Worker(config.workerPath);\r\n\r\n        worker.postMessage(config.webAssemblyPath || 'https://unpkg.com/webm-wasm@latest/dist/webm-wasm.wasm');\r\n        worker.addEventListener('message', function(event) {\r\n            if (event.data === 'READY') {\r\n                worker.postMessage({\r\n                    width: config.width,\r\n                    height: config.height,\r\n                    bitrate: config.bitrate || 1200,\r\n                    timebaseDen: config.frameRate || 30,\r\n                    realtime: config.realtime\r\n                });\r\n\r\n                cameraStream().pipeTo(new WritableStream({\r\n                    write: function(image) {\r\n                        if (finished) {\r\n                            console.error('Got image, but recorder is finished!');\r\n                            return;\r\n                        }\r\n\r\n                        worker.postMessage(image.data.buffer, [image.data.buffer]);\r\n                    }\r\n                }));\r\n            } else if (!!event.data) {\r\n                if (!isPaused) {\r\n                    arrayOfBuffers.push(event.data);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * This method records video.\r\n     * @method\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        arrayOfBuffers = [];\r\n        isPaused = false;\r\n        this.blob = null;\r\n        startRecording(stream);\r\n\r\n        if (typeof config.initCallback === 'function') {\r\n            config.initCallback();\r\n        }\r\n    };\r\n\r\n    var isPaused;\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        isPaused = true;\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        isPaused = false;\r\n    };\r\n\r\n    function terminate(callback) {\r\n        if (!worker) {\r\n            if (callback) {\r\n                callback();\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        // Wait for null event data to indicate that the encoding is complete\r\n        worker.addEventListener('message', function(event) {\r\n            if (event.data === null) {\r\n                worker.terminate();\r\n                worker = null;\r\n\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n            }\r\n        });\r\n\r\n        worker.postMessage(null);\r\n    }\r\n\r\n    var arrayOfBuffers = [];\r\n\r\n    /**\r\n     * This method stops recording video.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        finished = true;\r\n\r\n        var recorder = this;\r\n\r\n        terminate(function() {\r\n            recorder.blob = new Blob(arrayOfBuffers, {\r\n                type: 'video/webm'\r\n            });\r\n\r\n            callback(recorder.blob);\r\n        });\r\n    };\r\n\r\n    // for debugging\r\n    this.name = 'WebAssemblyRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        arrayOfBuffers = [];\r\n        isPaused = false;\r\n        this.blob = null;\r\n\r\n        // todo: if recording-ON then STOP it first\r\n    };\r\n\r\n    /**\r\n     * @property {Blob} blob - The recorded blob object.\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.stop(function(){\r\n     *     var blob = recorder.blob;\r\n     * });\r\n     */\r\n    this.blob = null;\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.WebAssemblyRecorder = WebAssemblyRecorder;\r\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n"],"names":[],"version":3,"file":"RecordRTC.b753ec82.js.map","sourceRoot":"/__parcel_source_root/"}